<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>学无止境</title>
  
  <subtitle>不忘初心</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://holdfire.github.io/"/>
  <updated>2019-10-30T19:13:36.728Z</updated>
  <id>http://holdfire.github.io/</id>
  
  <author>
    <name>holdfire</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>机器学习——二阶优化算法</title>
    <link href="http://holdfire.github.io/2019/10/31/machine-learning-optimization-algorithm-2/"/>
    <id>http://holdfire.github.io/2019/10/31/machine-learning-optimization-algorithm-2/</id>
    <published>2019-10-30T18:54:23.000Z</published>
    <updated>2019-10-30T19:13:36.728Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h4><h5 id="11-牛顿法"><a class="markdownIt-Anchor" href="#11-牛顿法"></a> 1.1 牛顿法</h5><h5 id="12-高斯-牛顿法"><a class="markdownIt-Anchor" href="#12-高斯-牛顿法"></a> 1.2 高斯-牛顿法</h5><h5 id="13-拟牛顿法"><a class="markdownIt-Anchor" href="#13-拟牛顿法"></a> 1.3 拟牛顿法</h5><h5 id="14-发展历程"><a class="markdownIt-Anchor" href="#14-发展历程"></a> 1.4 发展历程</h5><h4 id="2-不常用的二阶优化算法"><a class="markdownIt-Anchor" href="#2-不常用的二阶优化算法"></a> 2. 不常用的二阶优化算法</h4><h5 id="21-dfp算法"><a class="markdownIt-Anchor" href="#21-dfp算法"></a> 2.1 DFP算法</h5><p>  第一个拟牛顿算法是由Argonne国家实验室的物理学家William C.Davidon提出的。 他在1959年开发了第一个拟牛顿算法:DFP（Davidon–Fletcher–Powell formula）更新公式，后来由Fletcher和Powell在1963年推广，但现在很少使用</p><h4 id="3-常用的二阶优化算法"><a class="markdownIt-Anchor" href="#3-常用的二阶优化算法"></a> 3. 常用的二阶优化算法</h4><h5 id="31-sr1公式用于对称秩一"><a class="markdownIt-Anchor" href="#31-sr1公式用于对称秩一"></a> 3.1 SR1公式（用于“对称秩一”）</h5><p>  </p><h5 id="32-bhhh方法"><a class="markdownIt-Anchor" href="#32-bhhh方法"></a> 3.2 BHHH方法</h5><p>  </p><h5 id="33-bfgs方法"><a class="markdownIt-Anchor" href="#33-bfgs方法"></a> 3.3 BFGS方法</h5><p>  BFGS算法的全称为Broyden–Fletcher–Goldfarb–Shanno algorithm</p><h5 id="34-limited-memory-bfgs方法"><a class="markdownIt-Anchor" href="#34-limited-memory-bfgs方法"></a> 3.4 Limited-memory BFGS方法</h5><p>  低内存拓展算法</p><h4 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料：</h4><ol><li>机器之心——二阶优化算法介绍：<a href="https://www.jiqizhixin.com/graph/technologies/75950ad0-edbd-4208-9347-b8c17b8e058c" target="_blank" rel="noopener">https://www.jiqizhixin.com/graph/technologies/75950ad0-edbd-4208-9347-b8c17b8e058c</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-简介&quot;&gt;&lt;/a&gt; 1. 简介&lt;/h4&gt;
&lt;h5 id=&quot;11-牛顿法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#11-牛顿法&quot;&gt;&lt;/a&gt; 1.1
      
    
    </summary>
    
    
      <category term="人工智能" scheme="http://holdfire.github.io/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    
      <category term="机器学习" scheme="http://holdfire.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>机器学习——损失函数</title>
    <link href="http://holdfire.github.io/2019/10/31/machine-learning-loss-function/"/>
    <id>http://holdfire.github.io/2019/10/31/machine-learning-loss-function/</id>
    <published>2019-10-30T18:29:07.000Z</published>
    <updated>2019-10-30T19:14:57.962Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h4><h5 id="11-什么是损失函数"><a class="markdownIt-Anchor" href="#11-什么是损失函数"></a> 1.1 什么是损失函数？</h5><h4 id="2回归问题中的损失函数"><a class="markdownIt-Anchor" href="#2回归问题中的损失函数"></a> 2.回归问题中的损失函数</h4><h4 id="3-分类问题中的损失函数"><a class="markdownIt-Anchor" href="#3-分类问题中的损失函数"></a> 3. 分类问题中的损失函数</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-简介&quot;&gt;&lt;/a&gt; 1. 简介&lt;/h4&gt;
&lt;h5 id=&quot;11-什么是损失函数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#11-什么是损失函数&quot;&gt;
      
    
    </summary>
    
    
      <category term="人工智能" scheme="http://holdfire.github.io/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    
      <category term="机器学习" scheme="http://holdfire.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>机器学习——一阶优化算法</title>
    <link href="http://holdfire.github.io/2019/10/31/machine-learning-optimization-algorithm-1/"/>
    <id>http://holdfire.github.io/2019/10/31/machine-learning-optimization-algorithm-1/</id>
    <published>2019-10-30T18:28:46.000Z</published>
    <updated>2019-10-30T19:12:51.455Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h4><h5 id="11-什么是优化算法"><a class="markdownIt-Anchor" href="#11-什么是优化算法"></a> 1.1 什么是优化算法？</h5><h5 id="12-为什么需要优化算法"><a class="markdownIt-Anchor" href="#12-为什么需要优化算法"></a> 1.2 为什么需要优化算法？</h5><h5 id="13-优化算法分类"><a class="markdownIt-Anchor" href="#13-优化算法分类"></a> 1.3 优化算法分类</h5><h4 id="2-一阶优化算法"><a class="markdownIt-Anchor" href="#2-一阶优化算法"></a> 2. 一阶优化算法</h4><h5 id="21-随机梯度下降法"><a class="markdownIt-Anchor" href="#21-随机梯度下降法"></a> 2.1 随机梯度下降法</h5><p>  随机梯度下降法(Stotastic Gradient Descend method, SGD)是</p><h5 id="22-批量梯度下降法"><a class="markdownIt-Anchor" href="#22-批量梯度下降法"></a> 2.2 批量梯度下降法</h5><p>  批量梯度下降法(Batch Gradient Descend)</p><h5 id="23-小批量随机梯度下降法"><a class="markdownIt-Anchor" href="#23-小批量随机梯度下降法"></a> 2.3 小批量随机梯度下降法</h5><p>  小批量梯度下降法(mini-Batch Gradient Descend)</p><h5 id="24-动量梯度下降法"><a class="markdownIt-Anchor" href="#24-动量梯度下降法"></a> 2.4 动量梯度下降法</h5><p>  动量梯度下降法(Momentum Gradient Descend)</p><h5 id="25-nesterov梯度下降方法"><a class="markdownIt-Anchor" href="#25-nesterov梯度下降方法"></a> 2.5 Nesterov梯度下降方法</h5><p>  Nesterov梯度下降方法(Nesterov Accelerated Gradient)是对传统momentum方法的一项改进，由Ilya Sutskever(2012 unpublished)在Nesterov工作的启发下提出的。<br />其基本思路如下图：</p><h5 id="26-adagrade"><a class="markdownIt-Anchor" href="#26-adagrade"></a> 2.6 Adagrade</h5><p>  </p><h5 id="27-adadelta"><a class="markdownIt-Anchor" href="#27-adadelta"></a> 2.7 Adadelta</h5><p>  </p><h5 id="28-rmsprop"><a class="markdownIt-Anchor" href="#28-rmsprop"></a> 2.8 RMSprop</h5><p>  </p><h5 id="29-adam"><a class="markdownIt-Anchor" href="#29-adam"></a> 2.9 Adam</h5><p>  </p><h5 id="3-选择技巧"><a class="markdownIt-Anchor" href="#3-选择技巧"></a> 3 选择技巧</h5><h4 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料：</h4><ol><li>各种优化方法总结比较：<a href="https://www.cnblogs.com/qniguoym/p/8058186.html" target="_blank" rel="noopener">https://www.cnblogs.com/qniguoym/p/8058186.html</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-简介&quot;&gt;&lt;/a&gt; 1. 简介&lt;/h4&gt;
&lt;h5 id=&quot;11-什么是优化算法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#11-什么是优化算法&quot;&gt;
      
    
    </summary>
    
    
      <category term="人工智能" scheme="http://holdfire.github.io/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    
      <category term="机器学习" scheme="http://holdfire.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>机器学习——激活函数</title>
    <link href="http://holdfire.github.io/2019/10/31/machine-learning-activation-function/"/>
    <id>http://holdfire.github.io/2019/10/31/machine-learning-activation-function/</id>
    <published>2019-10-30T18:24:41.000Z</published>
    <updated>2019-10-30T19:15:30.783Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1简介"><a class="markdownIt-Anchor" href="#1简介"></a> 1.简介</h4><h5 id="11激活函数是什么"><a class="markdownIt-Anchor" href="#11激活函数是什么"></a> 1.1激活函数是什么</h5><p>  在多层神经网络中，上层神经元输出的线性组合和下层神经元的输出之间具有一个函数关系，这个函数关系称为激活函数。如下图所示：</p><h5 id="12激活函数的作用"><a class="markdownIt-Anchor" href="#12激活函数的作用"></a> 1.2激活函数的作用</h5><p>  如果不使用激活函数（相当于激活函数是<code>f(x)=x</code>)，每一层节点的输出都是输入的线性函数。无论神经网络有多少层，神经网络输出层都是输入层的线性组合，神经网络相当于一个感知机(perceptron)，网络的拟合能力就有限，因而，引入非线性的激活函数能够增强神经网络的表达能力，使得神经网络能够逼近任意函数。</p><h5 id="13常用的激活函数"><a class="markdownIt-Anchor" href="#13常用的激活函数"></a> 1.3常用的激活函数：</h5><p>sigmoid,relu,tanh;<br />leaky_relu,erelu,maxout;</p><h4 id="2-各激活函数的特点"><a class="markdownIt-Anchor" href="#2-各激活函数的特点"></a> 2. 各激活函数的特点</h4><h5 id="21-sigmoid函数"><a class="markdownIt-Anchor" href="#21-sigmoid函数"></a> 2.1 sigmoid函数</h5><p>  sigmoid是应用最为广泛的激活函数之一，函数形式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\sigma(x) = \frac &#123;1&#125;&#123;1+e^&#123;-x&#125;&#125;</span><br></pre></td></tr></table></figure><p>函数的图像及其导数的图像如下：</p><h5 id="特点"><a class="markdownIt-Anchor" href="#特点"></a> <mark>特点：</mark></h5><p>  sigmoid函数能够把任意实数映射为<code>$(0,1)$</code>区间上的实数。当自变量值小于-5时，函数值接近于0；而当自变量大于5时，函数值非常接近于1。  sigmoid函数求导非常方便，其导数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>f</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>⋅</mo><mo stretchy="false">[</mo><mn>1</mn><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f^{&#x27;}(x)=f(x)\cdot[1-f(x)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.19248em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span>，x=0时函数的导数最大，为0.25。</p><h5 id="缺点1反向传播过程产生梯度消失或梯度爆炸"><a class="markdownIt-Anchor" href="#缺点1反向传播过程产生梯度消失或梯度爆炸"></a> <mark>缺点1：反向传播过程产生梯度消失或梯度爆炸</mark></h5><p>下文参考资料：<html><a href="http://neuralnetworksanddeeplearning.com/chap5.html" target="_blank" rel="noopener">http://neuralnetworksanddeeplearning.com/chap5.html</a></html><br />  <strong>现象：</strong> 在深层网络中，不同隐含层的学习速度(各隐含层权值和偏差偏导组成的向量的范数)相差很大。靠后的隐含层学习速度较大，而靠前的隐含层经常在训练期间卡住，几乎什么都学习不到；也有时候早期的层可能学习很好，但后来的层卡住。<br />  <strong>试验：</strong> 使用MNIST数据集进行图像分类任务，输入层神经元个数为784，隐含层神经元个数均为30，输出层神经元个数为10；使用sigmoid函数作为激活函数。训练图片为1000张，使用Batch Stostic Gradient Descend算法，500个epoch。使用不同数目的隐含层的分类结果如下：</p><table><thead><tr><th>隐含层数目</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr><td>分类准确率</td><td>96.48%</td><td>96.90%</td><td>96.57%</td><td>96.53%</td></tr></tbody></table><p>  带有4个隐含层的网络，训练过程中各隐含层权重的学习速度变化如下图所示。从图中可以看出：在训练后期，第一个隐含层的学习速率比第四个隐含层慢了约100倍。</p><p>  <strong>分析：</strong> 直观上来说，额外的隐含层应该使网络能够学习更为复杂的分类功能，从而进行更好的分类。即使额外的隐含层什么都不做，模型的准确率也不会变得更差。由于权重是随机初始化的，因而第一个隐含层会丢失大量的图片有用信息，所以此时第一层几乎不可能不需要再学习，即还没有收敛到最优值。若假设额外的隐含层确实有用，那么问题应该是我们的学习算法没有找到合适的权重和偏差。<br />  <strong>梯度消失的数学推导：</strong> 考虑一个每层只有1个神经元的深层神经网络，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">w_1,w_2,...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span></span>为权重，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>b</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">b_1,b_2,...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span></span>为偏置。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">a_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>为第j层的输出值，代价函数C对第一个隐含层的偏置<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">b_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的偏导为：<br /><img src="8B6637324C144A04B452F206E47ED1A9" alt="tikz38" /><br />  将神经网络的权值初始化为均值为0，标准差为1。则大部分权值满足<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">∣</mo><msub><mi>w</mi><mi>j</mi></msub><mo fence="true">∣</mo></mrow><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\left|w_j\right|&lt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，且有$\left|w_j \sigma^{\prime}(z_j)&lt;\frac {1} {4}\right| <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">。</mi><mi mathvariant="normal">由</mi><mi mathvariant="normal">反</mi><mi mathvariant="normal">向</mi><mi mathvariant="normal">传</mi><mi mathvariant="normal">播</mi><mi mathvariant="normal">算</mi><mi mathvariant="normal">法</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">数</mi><mi mathvariant="normal">学</mi><mi mathvariant="normal">推</mi><mi mathvariant="normal">导</mi><mi mathvariant="normal">可</mi><mi mathvariant="normal">知</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">梯</mi><mi mathvariant="normal">度</mi><mi mathvariant="normal">从</mi><mi mathvariant="normal">后</mi><mi mathvariant="normal">向</mi><mi mathvariant="normal">前</mi><mi mathvariant="normal">传</mi><mi mathvariant="normal">播</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">每</mi><mi mathvariant="normal">传</mi><mi mathvariant="normal">递</mi><mi mathvariant="normal">一</mi><mi mathvariant="normal">层</mi><mi mathvariant="normal">梯</mi><mi mathvariant="normal">度</mi><mi mathvariant="normal">值</mi><mi mathvariant="normal">都</mi><mi mathvariant="normal">会</mi><mi mathvariant="normal">减</mi><mi mathvariant="normal">小</mi><mi mathvariant="normal">为</mi><mi mathvariant="normal">原</mi><mi mathvariant="normal">来</mi><mi mathvariant="normal">的</mi><mn>0.25</mn><mi mathvariant="normal">倍</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">如</mi><mi mathvariant="normal">果</mi><mi mathvariant="normal">神</mi><mi mathvariant="normal">经</mi><mi mathvariant="normal">网</mi><mi mathvariant="normal">络</mi><mi mathvariant="normal">隐</mi><mi mathvariant="normal">层</mi><mi mathvariant="normal">特</mi><mi mathvariant="normal">别</mi><mi mathvariant="normal">多</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">那</mi><mi mathvariant="normal">么</mi><mi mathvariant="normal">梯</mi><mi mathvariant="normal">度</mi><mi mathvariant="normal">在</mi><mi mathvariant="normal">穿</mi><mi mathvariant="normal">过</mi><mi mathvariant="normal">多</mi><mi mathvariant="normal">层</mi><mi mathvariant="normal">后</mi><mi mathvariant="normal">将</mi><mi mathvariant="normal">变</mi><mi mathvariant="normal">得</mi><mi mathvariant="normal">非</mi><mi mathvariant="normal">常</mi><mi mathvariant="normal">小</mi><mi mathvariant="normal">接</mi><mi mathvariant="normal">近</mi><mi mathvariant="normal">于</mi><mn>0</mn><mi mathvariant="normal">，</mi><mi mathvariant="normal">即</mi><mi mathvariant="normal">出</mi><mi mathvariant="normal">现</mi><mi mathvariant="normal">梯</mi><mi mathvariant="normal">度</mi><mi mathvariant="normal">消</mi><mi mathvariant="normal">失</mi><mi mathvariant="normal">现</mi><mi mathvariant="normal">象</mi><mi mathvariant="normal">；</mi><mi mathvariant="normal">当</mi><mi mathvariant="normal">网</mi><mi mathvariant="normal">络</mi><mi mathvariant="normal">权</mi><mi mathvariant="normal">值</mi><mi mathvariant="normal">初</mi><mi mathvariant="normal">始</mi><mi mathvariant="normal">化</mi><mi mathvariant="normal">为</mi></mrow><annotation encoding="application/x-tex">。由反向传播算法的数学推导可知，梯度从后向前传播时，每传递一层梯度值都会减小为原来的0.25倍，如果神经网络隐层特别多，那么梯度在穿过多层后将变得非常小接近于0，即出现梯度消失现象；当网络权值初始化为</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">由</span><span class="mord cjk_fallback">反</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">播</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">学</span><span class="mord cjk_fallback">推</span><span class="mord cjk_fallback">导</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">知</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">梯</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">从</span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">前</span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">播</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">递</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">层</span><span class="mord cjk_fallback">梯</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">都</span><span class="mord cjk_fallback">会</span><span class="mord cjk_fallback">减</span><span class="mord cjk_fallback">小</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">原</span><span class="mord cjk_fallback">来</span><span class="mord cjk_fallback">的</span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">5</span><span class="mord cjk_fallback">倍</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">如</span><span class="mord cjk_fallback">果</span><span class="mord cjk_fallback">神</span><span class="mord cjk_fallback">经</span><span class="mord cjk_fallback">网</span><span class="mord cjk_fallback">络</span><span class="mord cjk_fallback">隐</span><span class="mord cjk_fallback">层</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">别</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">那</span><span class="mord cjk_fallback">么</span><span class="mord cjk_fallback">梯</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">穿</span><span class="mord cjk_fallback">过</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">层</span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">将</span><span class="mord cjk_fallback">变</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">非</span><span class="mord cjk_fallback">常</span><span class="mord cjk_fallback">小</span><span class="mord cjk_fallback">接</span><span class="mord cjk_fallback">近</span><span class="mord cjk_fallback">于</span><span class="mord">0</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">即</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">现</span><span class="mord cjk_fallback">梯</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">消</span><span class="mord cjk_fallback">失</span><span class="mord cjk_fallback">现</span><span class="mord cjk_fallback">象</span><span class="mord cjk_fallback">；</span><span class="mord cjk_fallback">当</span><span class="mord cjk_fallback">网</span><span class="mord cjk_fallback">络</span><span class="mord cjk_fallback">权</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">初</span><span class="mord cjk_fallback">始</span><span class="mord cjk_fallback">化</span><span class="mord cjk_fallback">为</span></span></span></span>(1,+\infty)<span class='katex-error' title='ParseError: KaTeX parse error: Expected &#039;EOF&#039;, got &#039;&amp;&#039; at position 21: …，则会出现梯度爆炸情况。  &amp;̲emsp;&amp;emsp;**梯度…'>区间内的值，则会出现梯度爆炸情况。  &amp;emsp;&amp;emsp;**梯度爆炸的产生：**   当权重设置很大时，如</span>w_1=w_2=w_3=w_4=1000<span class='katex-error' title='ParseError: KaTeX parse error: Expected &#039;EOF&#039;, got &#039;&amp;&#039; at position 23: …0时，会产生梯度爆炸。   &amp;̲emsp;&amp;emsp;**思考…'>,而z的值接近0时，会产生梯度爆炸。   &amp;emsp;&amp;emsp;**思考：** 为了避免梯度消失，我们可以通过设置合适</span>w_j<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">的</mi><mi mathvariant="normal">初</mi><mi mathvariant="normal">始</mi><mi mathvariant="normal">值</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">使</mi><mi mathvariant="normal">得</mi></mrow><annotation encoding="application/x-tex">的初始值，使得</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">初</span><span class="mord cjk_fallback">始</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">使</span><span class="mord cjk_fallback">得</span></span></span></span>\left|w_j \sigma^{\prime}(z_j) \right|&gt;1<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">。</mi><mi mathvariant="normal">事</mi><mi mathvariant="normal">实</mi><mi mathvariant="normal">上</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">这</mi><mi mathvariant="normal">非</mi><mi mathvariant="normal">常</mi><mi mathvariant="normal">困</mi><mi mathvariant="normal">难</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">因</mi><mi mathvariant="normal">为</mi></mrow><annotation encoding="application/x-tex">。事实上，这非常困难，因为</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">事</span><span class="mord cjk_fallback">实</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">非</span><span class="mord cjk_fallback">常</span><span class="mord cjk_fallback">困</span><span class="mord cjk_fallback">难</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">因</span><span class="mord cjk_fallback">为</span></span></span></span>\sigma<sup>{\prime}(z_j)=\sigma</sup>{\prime}(wa+b) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">的</mi><mi mathvariant="normal">值</mi><mi mathvariant="normal">是</mi><mi mathvariant="normal">依</mi><mi mathvariant="normal">赖</mi><mi mathvariant="normal">于</mi><mi>w</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">当</mi><mi>w</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">值</mi><mi mathvariant="normal">较</mi><mi mathvariant="normal">大</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">，</mi></mrow><annotation encoding="application/x-tex">的值是依赖于w的，当w的值较大时，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">依</span><span class="mord cjk_fallback">赖</span><span class="mord cjk_fallback">于</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">当</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">较</span><span class="mord cjk_fallback">大</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">，</span></span></span></span>\sigma^{\prime}(z_j)$通常会很小。梯度消失很难避免。<br />  <strong>总结：</strong> 深层神经网络的反向传播过程会发生梯度变化不稳定的状况。通过使用其他的激活函数，我们能否避免这种梯度下降不稳定的现象呢？<br />  <strong>相关文献：</strong> 2010年Glorot和Bengio发文表明sigmoid函数在深层神经网络中，最后的隐含层在训练中会产生饱和，其值接近0，作者建议使用其他的激活函数。<a href="http://proceedings.mlr.press/v9/glorot10a/glorot10a.pdf" target="_blank" rel="noopener">Understanding the difficulty of training deep feedforward neural networks</a></p><h5 id="缺点2sigmoid函数的输出不是0均值zero-centered"><a class="markdownIt-Anchor" href="#缺点2sigmoid函数的输出不是0均值zero-centered"></a> <mark>缺点2：sigmoid函数的输出不是0均值(zero-centered)</mark></h5><p>  这会导致后一层的神经元将得到上一层输出的非0均值的信号作为输入。产生的一个结果就是：如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">x&gt;0,f(x)=w^{T}x+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.924661em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>,那么对w求局部梯度则都为正，这样在反向传播的过程中w要么都往正方向更新，要么都往负方向更新，导致有一种捆绑的效果，使得收敛缓慢。如果按batch去训练，那么那个batch可能得到不同的信号，所以这个问题还是可以缓解一下的。因此，非0均值这个问题虽然会产生一些不好的影响，不过跟上面提到的梯度消失问题相比还是要好很多的。</p><h5 id="22-tanh函数"><a class="markdownIt-Anchor" href="#22-tanh函数"></a> 2.2 tanh函数</h5><p>  tanh函数的形式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tanh(x)=\frac&#123;e^&#123;x&#125;-e^&#123;-x&#125;&#125; &#123;e^&#123;x&#125;+e^&#123;-x&#125;&#125;</span><br></pre></td></tr></table></figure><p>  tanh函数及其导数的图像如下所示：<br /><img src="B5829748B50D4CD395A164702E26CA17" alt="2018041517590341" /><br />  <strong>特点：</strong> 解决了sigmoid函数的非零均值问题，但梯度消失的问题仍然没有解决。</p><h5 id="23-relu函数"><a class="markdownIt-Anchor" href="#23-relu函数"></a> 2.3 ReLU函数</h5><p>  ReLU(Rectified Linear Unit)函数的基本形式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Relu(x) = max(0,x)</span><br></pre></td></tr></table></figure><p>  ReLU函数及其导数的图像如下所示：<br /><img src="D0CEA84C47E0407CAC66F19606F16C60" alt="relu" /><br />  <strong>优点：</strong> ReLU函数解决了梯度消失的问题；计算速度快；收敛速度远快于sigmoid函数和tanh函数。<br />  <strong>缺点：</strong> ReLU函数的输出不是零均值；Dead ReLU Problem，指的是某些神经元可能永远不会被激活，导致相应的参数永远不能被更新。有两个主要原因可能导致这种情况产生: (1) 参数初始化不当，负的权值太多，这种情况比较少见； (2) 学习率太高导致在训练过程中参数更新太大，不幸使网络进入这种状态。解决方法是可以采用Xavier初始化方法，以及避免将learning rate设置太大或使用adagrad等自动调节learning rate的算法。</p><h5 id="24-leaky-relu函数"><a class="markdownIt-Anchor" href="#24-leaky-relu函数"></a> 2.4 Leaky ReLU函数</h5><p>  Leaky ReLU函数的形式如下，其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>是一个非常小的正数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Leaky ReLU(X) = max(\alpha x, x)</span><br></pre></td></tr></table></figure><p>  Leaky ReLU函数及其导数的图像如下所示：<br /><img src="56488FB0850042D29A9D1E05ABD04407" alt="leakyrelu" /><br />  <strong>特点：</strong> 为了解决Dead ReLU Problem，将ReLU的前半段设为αx 而非0，通常α=0.01。理论上来讲，Leaky ReLU有ReLU的所有优点，外加不会有Dead ReLU问题，但是在实际操作当中，并没有完全证明Leaky ReLU总是好于ReLU。</p><h4 id="25-其他激活函数"><a class="markdownIt-Anchor" href="#25-其他激活函数"></a> 2.5 其他激活函数</h4><p>  如ELU(Exponential Linear Units)函数，Maxout函数</p><h4 id="3激活函数的选择"><a class="markdownIt-Anchor" href="#3激活函数的选择"></a> 3.激活函数的选择</h4><p>  (1)深度学习往往需要大量时间来处理大量数据，模型的收敛速度是尤为重要的。所以，总体上来讲，训练深度学习网络尽量使用zero-centered数据 (可以经过数据预处理实现) 和zero-centered输出。所以要尽量选择输出具有zero-centered特点的激活函数以加快模型的收敛速度。<br />  (2）如果使用 ReLU，那么一定要小心设置 learning rate， 而且要注意不要让网络出现很多 “dead” 神经元，如果这个问题不好解决，那么可以试试 Leaky ReLU、PReLU 或者 Maxout.<br />  (3）最好不要用 sigmoid，你可以试试 tanh，不过可以预期它的效果会比不上 ReLU 和 Maxout.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1简介&quot;&gt;&lt;/a&gt; 1.简介&lt;/h4&gt;
&lt;h5 id=&quot;11激活函数是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#11激活函数是什么&quot;&gt;&lt;/a&gt; 
      
    
    </summary>
    
    
      <category term="人工智能" scheme="http://holdfire.github.io/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    
      <category term="机器学习" scheme="http://holdfire.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Python——导入操作import</title>
    <link href="http://holdfire.github.io/2019/10/30/python-package-module-import/"/>
    <id>http://holdfire.github.io/2019/10/30/python-package-module-import/</id>
    <published>2019-10-30T11:19:53.000Z</published>
    <updated>2019-10-30T17:34:35.542Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h4><h5 id="11-导入的内容"><a class="markdownIt-Anchor" href="#11-导入的内容"></a> 1.1 导入的内容</h5><p>  Python中导入操作的关键字为import，导入的内容主要是：包(package)、模块(module)、类(class)、函数(类中称作方法, method)、变量(类中称作属性, attributes)等。<br />  在文件夹下面加入<code>__init__.py</code>文件(以下简称init文件)，这个文件夹就成为了一个包。包分为常规包和命名空间包。<br />  模块是包下面的python文件。所有的包都可以被看做模块，但不是所有的模块都是包。<br />  类是文件的基本单元（类中包括变量和函数）。<br />  导入操作中，导入的具体内容主要由init文件、<code>__all__</code>列表(以下简称all列表)控制。</p><h5 id="12-init文件的作用"><a class="markdownIt-Anchor" href="#12-init文件的作用"></a> 1.2 init文件的作用</h5><ul><li>如果包中含有init文件，<code>import 包名</code>就会执行init文件，能够批量导入init文件中导入的模块；</li><li>当这个包或者该包下的模块被导入时，init文件都会被执行；</li></ul><h5 id="13-all列表的作用"><a class="markdownIt-Anchor" href="#13-all列表的作用"></a> 1.3 all列表的作用</h5><ul><li>在init文件或模块中设置all列表时，<code>from 包名/模块名 import *</code>只会导入all列表中的内容；</li><li>all列表的内容可以是本文件自定义的变量或函数，或者是导入进来的模块；</li><li>从模块中all列表导入的内容称为内置变量，内置变量易覆盖本文件中的变量名，因而不建议使用<code>from 模块名 import *</code></li></ul><h4 id="2-import的使用方法"><a class="markdownIt-Anchor" href="#2-import的使用方法"></a> 2. import的使用方法</h4><p>  假设你正在一个名为current.py的文件（下面称为当前文件）中写代码，你想导入一些包或模块，那么不同的导入操作会有什么样的结果呢？<br />  <font color = 'aaaaaa'>注意：下面说的执行init文件 == init文件中所有的导入操作都会被执行，但这并不意味导入的内容能被当前文件所调用。（这句话主要是针对下面代码块中从包中导入模块这一情况）</font></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">//(<span class="number">1</span>) 从包名导入：包里必须有init文件，且init文件会被执行</span><br><span class="line"><span class="keyword">import</span> 包名                 // 当前文件能调用init文件所导入的全部内容。调用方式为包名.模块名</span><br><span class="line"><span class="keyword">from</span> 包名 <span class="keyword">import</span> *          // 若init文件有all列表，则当前文件只能调用all列表的内容；若无则能调用init文件所导入的全部内容。调用方式为模块名</span><br><span class="line"></span><br><span class="line">//(<span class="number">2</span>) 从包中导入模块：包里如果有init文件则先执行该文件，没有也没关系；然后导入该模块</span><br><span class="line"><span class="keyword">import</span> 包名.模块名           // 当前文件能调用init文件所导入的全部内容和该模块。调用方式为包名.模块名</span><br><span class="line"><span class="keyword">from</span> 包名 <span class="keyword">import</span> 模块名      // 当前文件只能调用该模块，无法调用init文件所导入的内容。调用方式为模块名</span><br><span class="line"></span><br><span class="line">//(<span class="number">3</span>) 单独导入模块：当前文件和该模块需在同一目录下</span><br><span class="line"><span class="keyword">import</span> 模块名                // 当前文件能调用该模块的所有对象(类、函数、变量等)，调用方式为模块名.对象名</span><br><span class="line"></span><br><span class="line">//(<span class="number">4</span>) 从模块中导入对象(类、函数、变量等)</span><br><span class="line"><span class="keyword">from</span> 模块名 <span class="keyword">import</span> 对象名     // 当前文件只能调用该模块下的指定对象，调用方式为对象名</span><br><span class="line"><span class="keyword">from</span> 模块名 <span class="keyword">import</span>  *        // 当前文件只能调用该模块下all列表中的对象，若无all列表则能调用所有的对象。调用方式为对象名</span><br><span class="line"></span><br><span class="line">//(<span class="number">5</span>) 包的相对导入：相对导入只能用<span class="keyword">from</span> <span class="keyword">import</span> 的方式</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> 包名           // .表示当前文件所在目录的路径</span><br><span class="line"><span class="keyword">from</span> .. <span class="keyword">import</span> 包名          // ..表示当前文件所在目录的上级目录的路径</span><br><span class="line"></span><br><span class="line">//(<span class="number">6</span>) 相对导入应用：init文件中的导入</span><br><span class="line"><span class="keyword">from</span> 包名 <span class="keyword">import</span> 模块名       // 正确</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> 模块名         // 正确，使用相对导入，其中.表示当前文件所在的目录</span><br><span class="line"><span class="keyword">import</span> 模块名                // 错误</span><br></pre></td></tr></table></figure><h4 id="3-import被解释执行"><a class="markdownIt-Anchor" href="#3-import被解释执行"></a> 3. import被解释执行</h4><h5 id="31-importlib包介绍"><a class="markdownIt-Anchor" href="#31-importlib包介绍"></a> 3.1 importlib包介绍</h5><p>  </p><h5 id="32-import的搜索路径"><a class="markdownIt-Anchor" href="#32-import的搜索路径"></a> 3.2 import的搜索路径</h5><p>  搜索路径被存储在sys模块中的path变量<br />  在导入搜索期间首先会被检查的地方是 sys.modules。 这个映射起到缓存之前导入的所有模块的作用（包括其中间路径）。<br />  当指定名称的模块在 sys.modules 中找不到时，Python 会接着搜索 sys.meta_path，其中包含元路径查找器对象列表。</p><h5 id="33-import的注意事项"><a class="markdownIt-Anchor" href="#33-import的注意事项"></a> 3.3 import的注意事项</h5><ul><li>每个包或模块只会被导入一次。</li><li>要避免循环导入。</li></ul><h4 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料：</h4><ol><li>Python语言参考——导入系统：<a href="https://docs.python.org/zh-cn/3/reference/import.html" target="_blank" rel="noopener">https://docs.python.org/zh-cn/3/reference/import.html</a></li><li>菜鸟教程——Python3模块：<a href="https://www.runoob.com/python3/python3-module.html" target="_blank" rel="noopener">https://www.runoob.com/python3/python3-module.html</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-简介&quot;&gt;&lt;/a&gt; 1. 简介&lt;/h4&gt;
&lt;h5 id=&quot;11-导入的内容&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#11-导入的内容&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
    
      <category term="编程语言" scheme="http://holdfire.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="Python" scheme="http://holdfire.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>C++学习——内存分配</title>
    <link href="http://holdfire.github.io/2019/10/30/cpp-memory-allocation/"/>
    <id>http://holdfire.github.io/2019/10/30/cpp-memory-allocation/</id>
    <published>2019-10-29T19:55:20.000Z</published>
    <updated>2019-10-30T11:23:27.394Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-栈区"><a class="markdownIt-Anchor" href="#1-栈区"></a> 1. 栈区</h4><p>由编译器自动分配和释放，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。</p><h4 id="2-堆区"><a class="markdownIt-Anchor" href="#2-堆区"></a> 2. 堆区</h4><p>一般有程序员分配和释放，用new运算符申请；若程序员不释放，程序结束时可由OS回收。</p><h4 id="3-全局区静态区"><a class="markdownIt-Anchor" href="#3-全局区静态区"></a> 3. 全局区（静态区）</h4><p>全局变量（main函数前声明的变量）和静态变量的存储放在一起。其中，初始化的全局变量和静态变量在一块区域，未初始化的全局变量和未初始化的静态变量在一块区域。</p><h4 id="4-文字常量区"><a class="markdownIt-Anchor" href="#4-文字常量区"></a> 4. 文字常量区</h4><p>常量字符串存储的地方。</p><h4 id="5-程序代码区"><a class="markdownIt-Anchor" href="#5-程序代码区"></a> 5. 程序代码区</h4><p>存放函数体的二进制码。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-栈区&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-栈区&quot;&gt;&lt;/a&gt; 1. 栈区&lt;/h4&gt;
&lt;p&gt;由编译器自动分配和释放，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。&lt;/p&gt;
&lt;h4 id=&quot;2-堆区&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="编程语言" scheme="http://holdfire.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="C++" scheme="http://holdfire.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C++学习——左值与右值</title>
    <link href="http://holdfire.github.io/2019/10/30/cpp-left-value-right-value/"/>
    <id>http://holdfire.github.io/2019/10/30/cpp-left-value-right-value/</id>
    <published>2019-10-29T18:12:27.000Z</published>
    <updated>2019-10-30T11:23:24.657Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-基本定义"><a class="markdownIt-Anchor" href="#1-基本定义"></a> 1. 基本定义</h4><ul><li>可以放到赋值操作符左边的是左值，可以放到赋值操作符右边的是右值;</li><li>左值的声明符号为&amp;，右值的声明符号为&amp;&amp;；</li><li>左值是可以取地址的对象或变量，可以作为右值使用；</li><li>右值通常是临时对象、常量等，不能作为左值使用；</li><li>右值分为纯右值(Pure RValue，如非应用返回的函数返回值，表达式等)和将亡值(eXpiring Value);</li></ul><h4 id="2-左值引用和右值引用"><a class="markdownIt-Anchor" href="#2-左值引用和右值引用"></a> 2. 左值引用和右值引用</h4><h5 id="21-基本定义"><a class="markdownIt-Anchor" href="#21-基本定义"></a> 2.1 基本定义</h5><ul><li>左值引用和右值引用都是属于引用类型。无论是声明一个左值引用还是右值引用，都必须立即进行初始化。而其原因可以理解为是引用类型本身自己并不拥有所绑定对象的内存，只是该对象的一个别名。</li><li>左值引用是具名变量值的别名，通常不能绑定到右值。非常量左值只能接受非常量左值对其进行初始化。</li><li>右值引用是不具名（匿名）变量的别名。</li><li>右值值引用通常不能绑定到任何的左值，要想绑定一个左值到右值引用，通常需要std::move()将左值强制转换为右值。</li></ul><h5 id="22-c11中各引用类型可以引用的值类型"><a class="markdownIt-Anchor" href="#22-c11中各引用类型可以引用的值类型"></a> 2.2 C++11中各引用类型可以引用的值类型</h5><ul><li>非常量左值引用： 非常量左值；</li><li>常量左值引用：   非常量左值；常量左值；非常量右值；常量右值；</li><li>非常量右值引用： 非常量右值；</li><li>常量右值引用：   非常量右值；常量右值。</li></ul><h5 id="23-特点"><a class="markdownIt-Anchor" href="#23-特点"></a> 2.3 特点</h5><ul><li>常量左值引用是个全能的引用类型，可用于拷贝语义。它可以接受非常量左值、常量左值、右值对其进行初始化。</li><li>非常量右值引用用于移动语义，完美转发。</li></ul><h5 id="24-示例"><a class="markdownIt-Anchor" href="#24-示例"></a> 2.4 示例</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>;                 <span class="comment">//正确，变量a可以是左值</span></span><br><span class="line"><span class="keyword">int</span> &amp;b = a;                <span class="comment">//正确，因为a是左值，引用类型变量的赋值表达式里，右边必须是左值</span></span><br><span class="line"><span class="keyword">int</span> &amp;c = <span class="number">5</span>;                <span class="comment">//错误，因为5是一个字面值，是右值不是左值</span></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> &amp;d= <span class="number">100</span>;         <span class="comment">//正确，是为了能将临时对象作为引用参数传递给函数，为啥？</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> &amp;c = b;          <span class="comment">//常量左值引用绑定到非常量左值，编译通过</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> d = <span class="number">2</span>;           <span class="comment">//常量左值</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> &amp;e = c;          <span class="comment">//常量左值引用绑定到常量左值，编译通过</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> &amp;b =<span class="number">2</span>;           <span class="comment">//常量左值引用绑定到右值，编译通过</span></span><br><span class="line"><span class="keyword">int</span> &amp;&amp;r1 = c;              <span class="comment">// 编译失败，因为c是一个左值</span></span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span> &amp;&amp;r2 = <span class="built_in">std</span>::move(a);   <span class="comment">//编译通过</span></span><br></pre></td></tr></table></figure><h4 id="3-常见例子"><a class="markdownIt-Anchor" href="#3-常见例子"></a> 3. 常见例子</h4><h5 id="31-函数的返回值"><a class="markdownIt-Anchor" href="#31-函数的返回值"></a> 3.1 函数的返回值</h5><p>  如果一个函数的返回值是一个临时对象，就是右值。如果返回值为引用，由于引用是对象的别名，通过引用可以改变对象的值，是左值。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> arr[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">fun1</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;<span class="keyword">return</span> arr[i];&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span>&amp; <span class="title">fun2</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;<span class="keyword">return</span> arr[i];&#125;</span><br><span class="line">fun1(<span class="number">0</span>) = <span class="number">10</span>;                    <span class="comment">// 错误，fun1()是右值，不能被赋值；</span></span><br><span class="line">fun2(<span class="number">0</span>) = <span class="number">10</span>;                    <span class="comment">// 正确，fun2()是左值，可以被赋值；</span></span><br></pre></td></tr></table></figure><h5 id="32-前置和后置"><a class="markdownIt-Anchor" href="#32-前置和后置"></a> 3.2 前置<ins>和后置</ins></h5><p>  前置<ins>的返回值是被</ins>的对象的引用，是一个可寻址的变量。返回值是左值，可以被赋值，如<code>++i=3</code>。<br />  后置<ins>的返回值是被</ins>对象的原始值，是一个临时对象。返回值是右值，不可以作为左值，代码<code>i++=3</code>是错误的。<br />  下面的代码是C<ins>中前置</ins>和后置++的实现：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 前置++的实现</span></span><br><span class="line">T&amp; T::<span class="keyword">operator</span>++()  &#123;++*<span class="keyword">this</span>; <span class="keyword">return</span> <span class="keyword">this</span>;&#125;</span><br><span class="line"><span class="comment">// 后置++的实现</span></span><br><span class="line">T T::<span class="keyword">operator</span>++(<span class="keyword">int</span>)&#123;<span class="function">T <span class="title">old</span><span class="params">(*<span class="keyword">this</span>)</span></span>; ++(*<span class="keyword">this</span>); <span class="keyword">return</span> old;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-基本定义&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-基本定义&quot;&gt;&lt;/a&gt; 1. 基本定义&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;可以放到赋值操作符左边的是左值，可以放到赋值操作符右边的是右值;&lt;/li&gt;
&lt;li&gt;左值的声明符号为&amp;am
      
    
    </summary>
    
    
      <category term="编程语言" scheme="http://holdfire.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="C++" scheme="http://holdfire.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C++学习——指针</title>
    <link href="http://holdfire.github.io/2019/10/29/cpp-pointer/"/>
    <id>http://holdfire.github.io/2019/10/29/cpp-pointer/</id>
    <published>2019-10-29T15:31:44.000Z</published>
    <updated>2019-10-30T11:23:30.806Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h4><h5 id="11-指针"><a class="markdownIt-Anchor" href="#11-指针"></a> 1.1 指针</h5><h5 id="12-空指针"><a class="markdownIt-Anchor" href="#12-空指针"></a> 1.2 空指针</h5><h5 id="13-智能指针"><a class="markdownIt-Anchor" href="#13-智能指针"></a> 1.3 智能指针</h5><h5 id="21inta-和-int-a的区别"><a class="markdownIt-Anchor" href="#21inta-和-int-a的区别"></a> 2.1(int*)a 和 int *a的区别？</h5><h4 id="3-指针和引用"><a class="markdownIt-Anchor" href="#3-指针和引用"></a> 3. 指针和引用</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-简介&quot;&gt;&lt;/a&gt; 1. 简介&lt;/h4&gt;
&lt;h5 id=&quot;11-指针&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#11-指针&quot;&gt;&lt;/a&gt; 1.1 指
      
    
    </summary>
    
    
      <category term="编程语言" scheme="http://holdfire.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="C++" scheme="http://holdfire.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C++学习——引用</title>
    <link href="http://holdfire.github.io/2019/10/29/cpp-reference/"/>
    <id>http://holdfire.github.io/2019/10/29/cpp-reference/</id>
    <published>2019-10-29T15:31:23.000Z</published>
    <updated>2019-10-30T13:14:08.234Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h4><ul><li>引用是一种特殊的变量，可以被认为是一个变量的别名。</li><li>例如：<code>int a = 1; int &amp;b = a;</code>变量b即为变量a的引用。</li><li>声明一个引用时，必须同时对它进行初始化，使它指向一个已经存在的对象。</li><li>一旦一个引用被初始化后，就不能改为指向其他对象。</li><li>引用变量和原变量取地址运算&amp;的结果相同。</li></ul><h4 id="2-引用作为函数参数"><a class="markdownIt-Anchor" href="#2-引用作为函数参数"></a> 2. 引用作为函数参数</h4><h5 id="21-引用传递"><a class="markdownIt-Anchor" href="#21-引用传递"></a> 2.1 引用传递</h5><p>  首先区分一下两个概念：当函数的参数为普通变量时，参数传递的方式称作<strong>值传递</strong>。当函数的参数为引用时，参数传递的方式称作<strong>引用传递</strong>。函数在被调用时，若发生的是值传递，形参会被分配内存单元并与实参结合；若发生的是引用传递，由于形参时实参的一个别名，对形参的任何操作都会直接作用于实参。<br />  下方代码中：执行<code>fun1(x1)</code>时参数传递方式为值传递，形参会被分配内存单元，函数调用完后x1的值仍为0。执行<code>fun1(x1)</code>时参数传递方式为引用传递，函数调用栈中不会产生变量x2的副本，而是直接用变量x2的值进行运算，函数调用完后x2的值为1。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun1</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;a++; <span class="keyword">return</span>;&#125;                 <span class="comment">// 值传递</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun2</span><span class="params">(<span class="keyword">int</span> &amp;a)</span></span>&#123;a++; <span class="keyword">return</span>;&#125;                 <span class="comment">// 引用传递</span></span><br><span class="line"><span class="keyword">int</span> x1 = <span class="number">0</span>, x2 = <span class="number">0</span>;</span><br><span class="line">fun1(x1);                                       <span class="comment">// x1的值不会被修改</span></span><br><span class="line">fun2(x2);                                       <span class="comment">// x2的值会被修改为1</span></span><br></pre></td></tr></table></figure><h5 id="22-引用传递形参为常引用"><a class="markdownIt-Anchor" href="#22-引用传递形参为常引用"></a> 2.2 引用传递——形参为常引用</h5><p>  如果一个函数的形参被申明为常引用，那么在函数体中，就不能修改该引用变量的值，达到了引用的安全性。下方代码将会报错：“常引用对象a为只读对象，不能进行a++操作。”</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun3</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp;a)</span></span>&#123;a++; <span class="keyword">return</span>;&#125;          <span class="comment">// 错误：参数为常引用，只读不允许被修改</span></span><br><span class="line"><span class="keyword">int</span> x3 = <span class="number">0</span>;                  </span><br><span class="line">fun3(x3)；</span><br></pre></td></tr></table></figure><h5 id="23-引用传递形参为引用时需注意"><a class="markdownIt-Anchor" href="#23-引用传递形参为引用时需注意"></a> 2.3 引用传递——形参为引用时需注意</h5><p>  如果一个函数的形参为引用时，那么需要注意传递的实参不能为const类型。<strong>而C++中的临时对象都是const类型的！</strong> 如函数的返回值，未命名的内容都是临时变量，因而下面的代码会运行错误。如果把<code>fun4()</code>的形参设为<code>(int a)</code>或者<code>(const int &amp;a)</code>，代码就可以正常运行了。<br />  <strong>所以，引用型参数应该在能被定义为const的情况下，尽量定义为const!</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun4</span><span class="params">(<span class="keyword">int</span> &amp;a)</span></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">helper</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">fun4(helper())；                    <span class="comment">// 错误：helper()返回的临时对象是const类型，不能作为实参</span></span><br><span class="line">fun4(<span class="number">0</span>);                           <span class="comment">// 错误：未命名的数字0是const类型，不能作为实参</span></span><br></pre></td></tr></table></figure><h4 id="3-引用作为函数返回值"><a class="markdownIt-Anchor" href="#3-引用作为函数返回值"></a> 3. 引用作为函数返回值</h4><ul><li>引用作为函数的返回值时，内存中不会产生返回值的副本。</li><li>返回的应该是一个函数外就存在的对象；</li><li>返回对象不能是函数体内局部变量的引用，因为函数调用完毕，局部变量就不存在了；</li><li>返回对象不能是表达式，不能是new分配的对象。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> arr[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span>&amp; <span class="title">fun5</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;<span class="keyword">return</span> arr[i];&#125;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;&amp;arr[i]&lt;&lt;<span class="built_in">endl</span>;               <span class="comment">// 返回结果：0x100402010</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;&amp;fun5(i)&lt;&lt;<span class="built_in">endl</span>;              <span class="comment">// 返回结果：0x100402010</span></span><br><span class="line">fun5(i) = <span class="number">10</span>;                      <span class="comment">// 这也可以，牛不，就因为人家函数的返回值为引用，是左值，可以被赋值</span></span><br></pre></td></tr></table></figure><p><strong>返回值为引用时，为左值，返回值可以被赋值、取地址等操作！</strong><br /><strong>返回值不是引用时，为右值，如下方代码所示。</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> arr[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun6</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;<span class="keyword">return</span> arr[i];&#125;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;&amp;arr[i]&lt;&lt;<span class="built_in">endl</span>;               <span class="comment">// 返回结果：0x100402010</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;&amp;fun6(i)&lt;&lt;<span class="built_in">endl</span>&gt;&gt;;            <span class="comment">// 错误，返回值为右值，不能取地址；</span></span><br><span class="line">fun6(i) = <span class="number">10</span>;                      <span class="comment">// 错误，不可以的兄弟，fun6的返回值是右值</span></span><br></pre></td></tr></table></figure><h4 id="4-引用总结"><a class="markdownIt-Anchor" href="#4-引用总结"></a> 4. 引用总结</h4><ul><li>引用传递主要应用在函数参数传递上，传送较大数据和对象时，内存中不会产生副本，节约了内存空间；</li><li>用const将参数设置为常引用，用以保证引用变量不被随意修改；</li><li>跟指针变量相比，引用可以看做变量的别名，代码可读性强，在C++中推荐使用引用而非指针作为函数的参数；</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-简介&quot;&gt;&lt;/a&gt; 1. 简介&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;引用是一种特殊的变量，可以被认为是一个变量的别名。&lt;/li&gt;
&lt;li&gt;例如：&lt;code&gt;int a = 1; int 
      
    
    </summary>
    
    
      <category term="编程语言" scheme="http://holdfire.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="C++" scheme="http://holdfire.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C++学习——多态性</title>
    <link href="http://holdfire.github.io/2019/10/29/cpp-polymorphism/"/>
    <id>http://holdfire.github.io/2019/10/29/cpp-polymorphism/</id>
    <published>2019-10-29T11:20:16.000Z</published>
    <updated>2019-10-30T11:23:36.670Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h4><h5 id="11-c的4种多态"><a class="markdownIt-Anchor" href="#11-c的4种多态"></a> 1.1 C++的4种多态</h5><p>  多态性是指一段程序能够处理多种类型对象的能力。C++中可以通过强制多态、重载多态、类型参数化多态、包含多态4种形式实现。前两种是表面的多态性，后两种是真正的多态性。</p><ul><li>强制多态：将一种类型的数据强制转化成另一种类型（隐式转换或显式转换）</li><li>重载多态：是指给同一个名字赋予不同的含义</li><li>参数化多态：通过模板实现，分为函数模板和类模板两种</li><li>包含多态：通过虚函数实现，虚函数是多态性的精华</li></ul><h5 id="12-静态绑定和动态绑定"><a class="markdownIt-Anchor" href="#12-静态绑定和动态绑定"></a> 1.2 静态绑定和动态绑定</h5><p>  多态性还可以分成编译时的多态和运行时的多态：其中，绑定工作在编译连接阶段完成的情况称为静态绑定，在程序运行阶段完成的情况称为动态绑定。绑定时指计算机程序自身彼此关联的过程，用面向对象的术语讲，就是把一条消息和一个对象的方法相结合的过程</p><h4 id="2-强制多态"><a class="markdownIt-Anchor" href="#2-强制多态"></a> 2. 强制多态</h4><h4 id="3-重载多态"><a class="markdownIt-Anchor" href="#3-重载多态"></a> 3. 重载多态</h4><h4 id="4-参数化多态"><a class="markdownIt-Anchor" href="#4-参数化多态"></a> 4. 参数化多态</h4><h4 id="5-包含多态"><a class="markdownIt-Anchor" href="#5-包含多态"></a> 5. 包含多态</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-简介&quot;&gt;&lt;/a&gt; 1. 简介&lt;/h4&gt;
&lt;h5 id=&quot;11-c的4种多态&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#11-c的4种多态&quot;&gt;&lt;/
      
    
    </summary>
    
    
      <category term="编程语言" scheme="http://holdfire.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="C++" scheme="http://holdfire.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C++学习——const限定符</title>
    <link href="http://holdfire.github.io/2019/10/29/cpp-const/"/>
    <id>http://holdfire.github.io/2019/10/29/cpp-const/</id>
    <published>2019-10-29T10:57:15.000Z</published>
    <updated>2019-10-30T11:23:18.538Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-const简介"><a class="markdownIt-Anchor" href="#1-const简介"></a> 1. const简介</h4><ul><li>简介：用const关键字修饰的内容为常量，其值初始化后就不允许修改。</li><li>命名：常用的做法是将这个常量的首字母或全部大写，以提醒用户这是个常量。</li><li>初始化：在声明一个常量时就应该将其初始化，如<code>const int Name = value;</code>。</li><li>替换：C语言中通常使用#define来定义常量，而const能够明确指定类型和限定作用域，优于前者。</li><li>优点：在函数的参数传递中，在引用传递前加上const限定符，可以防止输入变量被修改。</li></ul><h4 id="2-const的用法"><a class="markdownIt-Anchor" href="#2-const的用法"></a> 2. const的用法</h4><p>  const可以用来修饰整型变量、引用变量、指针变量、函数、对象、数组等。修饰的是其左边相邻的内容，如果左边没有内容，则修饰右边相邻的内容。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> age = <span class="number">3</span>;                  <span class="comment">// 我的年龄age是个整型变量，可以修改，我今年3岁</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Age_Mao = <span class="number">83</span>;       <span class="comment">// age_Mao是由const修饰的常量，其值初始化后不能修改</span></span><br></pre></td></tr></table></figure><h5 id="21-常引用"><a class="markdownIt-Anchor" href="#21-常引用"></a> 2.1 常引用</h5><p>  下面的year就是对变量age的一个常引用，不能通过year修改age的值，但可直接修改age的值。常引用的这一优点可以应用在函数的参数传递上，既能节约内存，也能防止引用对象被修改。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> &amp;year = age;        <span class="comment">// year是一个常引用</span></span><br><span class="line">*b = <span class="number">4</span>;                       <span class="comment">// 错误，常引用year，你是常引用，你不能改我的age啊</span></span><br><span class="line">age = <span class="number">4</span>;                      <span class="comment">// 正确，我的年龄age可以通过赋值修改，明年我4岁</span></span><br></pre></td></tr></table></figure><h5 id="22-常指针"><a class="markdownIt-Anchor" href="#22-常指针"></a> 2.2 常指针</h5><p>  指针p指向age所在地址，不能指向别的。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> *<span class="keyword">const</span> pt1 = &amp;age;</span><br></pre></td></tr></table></figure><h5 id="23-指向常量的指针"><a class="markdownIt-Anchor" href="#23-指向常量的指针"></a> 2.3 指向常量的指针</h5><p>  如下所示：pt2和pt3均为指向常量的指针，不能通过指针来修改age或者age_Mao。（但age可直接修改，age_Mao不能修改）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> *pt2 = &amp;age;          </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> *pt3 = &amp;Age_Mao;</span><br><span class="line"><span class="keyword">int</span> *p4 = &amp;Age_Mao;             <span class="comment">// 错误用法：禁止将const的地址附给非const指针(但const_cast可强制转换)</span></span><br></pre></td></tr></table></figure><h5 id="24-复杂情况将指针指向指针"><a class="markdownIt-Anchor" href="#24-复杂情况将指针指向指针"></a> 2.4 复杂情况：将指针指向指针</h5><p>参考《C++ Primer Plus》P222</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> *pd = &amp;age;                 <span class="comment">// *pd = 4 是有效的</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> *pt = pd;             <span class="comment">// *pt = 4 是无效操作(一级间接关系)</span></span><br></pre></td></tr></table></figure><h4 id="3-常成员函数"><a class="markdownIt-Anchor" href="#3-常成员函数"></a> 3. 常成员函数</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">类名::fun(形参) <span class="keyword">const</span>;           <span class="comment">// 常成员函数：</span></span><br></pre></td></tr></table></figure><h4 id="4-常对象"><a class="markdownIt-Anchor" href="#4-常对象"></a> 4. 常对象</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">类名 <span class="keyword">const</span> 对象名;               <span class="comment">// 常对象：</span></span><br></pre></td></tr></table></figure><h4 id="5-其他"><a class="markdownIt-Anchor" href="#5-其他"></a> 5. 其他</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> 数组名[];              <span class="comment">// 常数组：</span></span><br></pre></td></tr></table></figure><h4 id="6-const_cast"><a class="markdownIt-Anchor" href="#6-const_cast"></a> 6. const_cast</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-const简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-const简介&quot;&gt;&lt;/a&gt; 1. const简介&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;简介：用const关键字修饰的内容为常量，其值初始化后就不允许修改。&lt;/li&gt;
&lt;li&gt;
      
    
    </summary>
    
    
      <category term="编程语言" scheme="http://holdfire.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="C++" scheme="http://holdfire.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Linux——Linux命令介绍</title>
    <link href="http://holdfire.github.io/2019/10/27/linux-command/"/>
    <id>http://holdfire.github.io/2019/10/27/linux-command/</id>
    <published>2019-10-26T21:25:15.000Z</published>
    <updated>2019-10-30T11:21:53.054Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h4><h5 id="11-linux命令分类"><a class="markdownIt-Anchor" href="#11-linux命令分类"></a> 1.1 Linux命令分类</h5><p>  Linux命令分为两种，一种是shell内置命令，一种是外部命名。在命令行输入<code>type command</code>可以区分。</p><h5 id="12-帮助使用linux命令"><a class="markdownIt-Anchor" href="#12-帮助使用linux命令"></a> 1.2 帮助使用Linux命令</h5><p>  对于一些内部命令，可以有：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">man bash           # 查看所有的内部命令</span><br><span class="line">man help           # 得到所有内建命令列表及使用方法</span><br><span class="line">help command       # 得到该命令的具体信息</span><br></pre></td></tr></table></figure><p>  对于外部命令，可以有：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">command --help     # 得到该命令的帮助信息</span><br><span class="line">command -h         # 同上</span><br><span class="line">man command        # </span><br><span class="line">info command       #</span><br></pre></td></tr></table></figure><h5 id="13-linux执行命令的查找顺序"><a class="markdownIt-Anchor" href="#13-linux执行命令的查找顺序"></a> 1.3 Linux执行命令的查找顺序</h5><p>   环境变量<code>$PATH</code>：决定了shell在哪些目录中寻找命令或程序。由左到右依次在这些目录中查找，以先找到的为准。命令行输入<code>echo $PATH</code>可以查看环境变量。</p><h5 id="14-linux常用命令的存放位置"><a class="markdownIt-Anchor" href="#14-linux常用命令的存放位置"></a> 1.4 Linux常用命令的存放位置</h5><p>  在命令行输入完一个命令后，shell会在下面几个目录查找是否有该命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/bin              # 存放普通用户经常使用的命令，如cp,mv,kill</span><br><span class="line">/sbin             # 存放系统管理员才能使用的系统管理程序，如ping,ifconfig</span><br><span class="line">/usr/bin          # 存放普通用户使用的应用程序，如python,vi</span><br><span class="line">/usr/local/bin    # 存放用户下载安装的软件或者自己编写的可执行文件，如pip,virtualenv,MySQL</span><br><span class="line">/usr/sbin         # 存放系统管理员使用的比较高级的管理程序和系统守护程序</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-简介&quot;&gt;&lt;/a&gt; 1. 简介&lt;/h4&gt;
&lt;h5 id=&quot;11-linux命令分类&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#11-linux命令
      
    
    </summary>
    
    
      <category term="操作系统" scheme="http://holdfire.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="Linux" scheme="http://holdfire.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux——系统目录结构</title>
    <link href="http://holdfire.github.io/2019/10/27/linux-system-directory/"/>
    <id>http://holdfire.github.io/2019/10/27/linux-system-directory/</id>
    <published>2019-10-26T21:23:19.000Z</published>
    <updated>2019-10-30T11:22:10.261Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-简介&quot;&gt;&lt;/a&gt; 1. 简介&lt;/h4&gt;

      
    
    </summary>
    
    
      <category term="操作系统" scheme="http://holdfire.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="Linux" scheme="http://holdfire.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux——文件系统与目录篇(1)</title>
    <link href="http://holdfire.github.io/2019/10/27/linux-file-directory-1/"/>
    <id>http://holdfire.github.io/2019/10/27/linux-file-directory-1/</id>
    <published>2019-10-26T19:17:45.000Z</published>
    <updated>2019-10-30T11:21:59.352Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-linux的文件权限"><a class="markdownIt-Anchor" href="#1-linux的文件权限"></a> 1. Linux的文件权限</h4><p>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-linux的文件权限&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-linux的文件权限&quot;&gt;&lt;/a&gt; 1. Linux的文件权限&lt;/h4&gt;
&lt;p&gt;  &lt;/p&gt;

      
    
    </summary>
    
    
      <category term="操作系统" scheme="http://holdfire.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="Linux" scheme="http://holdfire.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux——简介</title>
    <link href="http://holdfire.github.io/2019/10/27/linux-introduction/"/>
    <id>http://holdfire.github.io/2019/10/27/linux-introduction/</id>
    <published>2019-10-26T16:10:34.000Z</published>
    <updated>2019-10-30T11:22:03.332Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-linux简介"><a class="markdownIt-Anchor" href="#1-linux简介"></a> 1. Linux简介</h4><p>  Linux是一个GNU GPL授权模式的开源的操作系统。操作系统由内核和系统调用组成,操作系统是应用程序和计算机硬件沟通的桥梁。即：硬件–&gt;内核–&gt;系统调用–&gt;应用程序(Shell)。</p><h5 id="11-linux内核版本与发行版本"><a class="markdownIt-Anchor" href="#11-linux内核版本与发行版本"></a> 1.1 Linux内核版本与发行版本</h5><p>  Linux内核版本是单线发展的，其版本号由“主版本.次版本.末版本”的格式构成。截至2019年10月27日，最新的<a href="https://www.kernel.org/" target="_blank" rel="noopener">Linux稳定内核版本为</a>5.3.7版。<br />  Linux发行版本是由“Linux内核+软件+工具+文件”组成的一个完整的安装程序，不同的厂商提供不同的发行版本，主要分为两大类：</p><ul><li>使用rpm/yum包管理方式的系统，包括：RedHat,Fedora,CentOS等；</li><li>使用apt-get/dpkg包管理方式的系统，包括：Debian,Ubuntu等；</li></ul><h5 id="12-linux的特点"><a class="markdownIt-Anchor" href="#12-linux的特点"></a> 1.2 Linux的特点</h5><ul><li>Linux严格区分大小写；</li><li>Linux中一切内容皆文件（包括硬件）；</li><li>Linux不依靠拓展名区分文件类型，而是依据文件权限；</li><li>通常，压缩包的后缀为.gz .bz2 .tar .bz2 .tgz；二进制软件包为.rmp；脚本文件为 .sh</li></ul><h4 id="2-linux文件系统和目录"><a class="markdownIt-Anchor" href="#2-linux文件系统和目录"></a> 2. Linux文件系统和目录</h4><h4 id="3-shell与shell-script"><a class="markdownIt-Anchor" href="#3-shell与shell-script"></a> 3. Shell与Shell Script</h4><h4 id="4-linux用户管理"><a class="markdownIt-Anchor" href="#4-linux用户管理"></a> 4. Linux用户管理</h4><h4 id="5-linux系统管理"><a class="markdownIt-Anchor" href="#5-linux系统管理"></a> 5. Linux系统管理</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-linux简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-linux简介&quot;&gt;&lt;/a&gt; 1. Linux简介&lt;/h4&gt;
&lt;p&gt;  Linux是一个GNU GPL授权模式的开源的操作系统。操作系统由内核和系统调用组成,操作系统是
      
    
    </summary>
    
    
      <category term="操作系统" scheme="http://holdfire.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="Linux" scheme="http://holdfire.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux——Shell篇(1)</title>
    <link href="http://holdfire.github.io/2019/10/27/linux-shell-1/"/>
    <id>http://holdfire.github.io/2019/10/27/linux-shell-1/</id>
    <published>2019-10-26T16:00:27.000Z</published>
    <updated>2019-10-30T11:22:06.845Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-shell是什么"><a class="markdownIt-Anchor" href="#1-shell是什么"></a> 1. Shell是什么？</h4><h5 id="11-正规军的解释"><a class="markdownIt-Anchor" href="#11-正规军的解释"></a> 1.1 正规军的解释</h5><p>  Shell是一个用C语言编写的程序！Shell是一个命令解释器！Shell是一种命令语言！Shell是一种程序设计语言！Shell是系统的用户界面，提供了用户与内核进行交互操作的接口！上面是网上找到的关于Shell的大部分解释，听着是不是让人头大？是的？！那就忘掉它，看看下面两个场景先。</p><h5 id="12-接待员老白和shell"><a class="markdownIt-Anchor" href="#12-接待员老白和shell"></a> 1.2 接待员老白和Shell</h5><p>  场景A：你去同福客栈吃饭，你对接待员老白说：“我要一份酸菜鱼。”老白对着你点头微笑表示ok，然后跑去前台的点菜机上噼里啪啦输入一堆信息，该消息随后传到了后厨李大嘴那里，李大嘴开始鼓捣起他的菜刀、砧板、狼牙棒等厨具。一个时辰过后，你的桌上终于出现了一份既不好看也不好吃的酸菜鱼。<br />  场景B：你在Linux终端工具上写代码，你写下了一行<code>echo &quot;Hello, world&quot;</code>,Shell对这行代码进行了解释，然后系统调用收到了该解释信息，信息接下来被传到了内核那里，内核开始控制CPU、内存、显卡等设备。一眨眼的时间，你的显示器上就出现了&quot;Hello, world&quot;这行字。<br />  <font color=AAAAAA>补充概念（此处可不看）：计算机的硬件由CPU、内存、显卡、磁盘等组成。操作系统包括内核和系统调用，内核（kernel，包括CPU调度、内存管理、磁盘输入输出等）直接控制上述硬件，系统调用是应用程序同系统之间的接口(API)，eg:Linux操作系统中如内存管理、网络、Socket套接字、进程间通信等接口。</font></p><h5 id="13-游击队的解释"><a class="markdownIt-Anchor" href="#13-游击队的解释"></a> 1.3 游击队的解释</h5><p>  场景A中信息的流动方向是：你说的话–&gt;接待员老白–&gt;点菜机—&gt;李大嘴–&gt;厨具，场景B中信息的流动方向是：你的代码–&gt;Shell–&gt;系统调用—&gt;内核–&gt;硬件。仅考虑信息的流动方向，我们可以认为场景A等价于场景B。那么在场景A中，你说的话就是你的代码，接待员老白就是Shell，点菜机就是系统调用，李大嘴就是内核，厨具就是计算机的各种硬件。再回过头来看下1.1中Shell的解释，是不是就很好理解了呢？如果再有人问你Shell是什么，你就告诉他：<font color=red>Shell就是个接待员！</font></p><h4 id="2-shell简介"><a class="markdownIt-Anchor" href="#2-shell简介"></a> 2. Shell简介</h4><h5 id="21-shell版本家族"><a class="markdownIt-Anchor" href="#21-shell版本家族"></a> 2.1 Shell版本家族</h5><p>  常见的shell有Bourne shell(简称sh),在Sun里默认的C shell(简称csh)等。Linux使用的版本是Bourne Again Shell(简称bash)，它是Bourne shell的增强版本。</p><h5 id="22-linux中的bash-shell"><a class="markdownIt-Anchor" href="#22-linux中的bash-shell"></a> 2.2 Linux中的Bash shell</h5><p>  使用<code>man bash</code>命令可以查看Bash shell的说明文档。用户在登录linux时，系统会分配一个shell用来工作，这个shell记录在/etc/passwd中。此外，/etc/shells文件中记录了当前可以使用的shell种类。作者在ubuntu16.04.5上查看的结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/bin/sh        # 已经被/bin/bash所替换</span><br><span class="line">/bin/dash</span><br><span class="line">/bin/bash      # Linux默认的shell</span><br><span class="line">/bin/rbash</span><br></pre></td></tr></table></figure><h4 id="3-shell作为一个c语言程序"><a class="markdownIt-Anchor" href="#3-shell作为一个c语言程序"></a> 3. Shell作为一个C语言程序</h4><p>  以Linux系统中Bash shell为例，主要有下面的优点：<br />  <strong>历史命令(history)</strong>：历史命令保存在用户家目录~/.bash_history文件中。需要注意该文件记录的是这次登陆之前执行过的命令，这次登录执行过得命令缓存在内存中，注销系统后才会被保存。<br />  <strong>命令与文件补全功能(Tab按键)</strong> :不仅能少打字，还能确保你的输入是正确的。<br />  <strong>命令别名设置(alias)</strong> :在命令行输入alias就能查看当前命令的别名，这些别名保存在用户家目录~/.bashrc文件中。<br />   <strong>任务管理、前台、后台控制(job control,foreground,background)</strong> :可以随时将任务丢到后台中执行，防止不小心使用ctrl+c停止程序。<br />   <strong>通配符(Wildcard)</strong> :bash支持许多通配符来帮助用户查询与执行命令。</p><h4 id="4-shell作为命令语言和命令解释器"><a class="markdownIt-Anchor" href="#4-shell作为命令语言和命令解释器"></a> 4. Shell作为命令语言和命令解释器</h4><h5 id="41-bash-shell的内置命令"><a class="markdownIt-Anchor" href="#41-bash-shell的内置命令"></a> 4.1 Bash shell的内置命令</h5><p>  Linux命令分为两种，一种是shell内置命令，一种是外部命名。使用<code>type</code>命令可以查看。</p><h5 id="42-命令的执行"><a class="markdownIt-Anchor" href="#42-命令的执行"></a> 4.2 命令的执行</h5><p>  命令太长时，可以使用反斜杠\对[Enter]键进行转义，注意两者中间不能有其他字符</p><h5 id="43-命令的快速编辑"><a class="markdownIt-Anchor" href="#43-命令的快速编辑"></a> 4.3 命令的快速编辑</h5><p>  一些方便的命令快速编辑按钮</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ctrl+u: 从光标处向前删除命令串</span><br><span class="line">ctrl+k: 从光标处向后删除命令串</span><br><span class="line">ctrl+a: 让光标移动到命令串最前面</span><br><span class="line">ctrl+e: 让光标移动到命令串最后面</span><br></pre></td></tr></table></figure><h4 id="5-shell作为程序设计语言"><a class="markdownIt-Anchor" href="#5-shell作为程序设计语言"></a> 5. Shell作为程序设计语言</h4><p>   Shell的优点是可以作为一种程序设计语言，通过编写程序化脚本(shell scripts)，可以将需要连续执行的命令写成一个shell脚本文件来执行。shell脚本主要有2中运行方式：</p><h5 id="51-脚本作为可执行程序"><a class="markdownIt-Anchor" href="#51-脚本作为可执行程序"></a> 5.1 脚本作为可执行程序</h5><p>   假设有一个test.sh的shell脚本文件，存放在path目录下，则执行方法为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd path                # 切换至脚本所在目录path</span><br><span class="line">chmod +x ./test.sh     # 使脚本具有执行权限</span><br><span class="line">./test.sh              # 执行脚本，不能写成test.sh，会被shell当成命令来查找</span><br></pre></td></tr></table></figure><h5 id="52-脚本作为解释器参数"><a class="markdownIt-Anchor" href="#52-脚本作为解释器参数"></a> 5.2 脚本作为解释器参数</h5><p>   这种方式是直接运行解释器，文件名作为参数，如<code>/bin/sh test.sh</code></p><h4 id="6-shell作为用户与内核交互操作的接口"><a class="markdownIt-Anchor" href="#6-shell作为用户与内核交互操作的接口"></a> 6. Shell作为用户与内核交互操作的接口</h4><h5 id="61-为什么要有shell"><a class="markdownIt-Anchor" href="#61-为什么要有shell"></a> 6.1 为什么要有Shell？</h5><p>  Shell的存在是有很多好处的。假设在同福客栈里没有了接待员老白，让你自己去操作点菜机，你不知道如何操作点菜机怎么办？你点了一道不存在的菜怎么办？</p><h5 id="62-为什么有多种shell"><a class="markdownIt-Anchor" href="#62-为什么有多种shell"></a> 6.2 为什么有多种Shell？</h5><p>  假设同福客栈偶尔还接待外宾，点菜的时候说的是外语。而接待员老白不会说外语，那么我们是不是就需要另一个服务员（另一种Shell）了。不同的Shell是为了应对应用程序有不同的需求。</p><h5 id="63-为什么要有系统调用"><a class="markdownIt-Anchor" href="#63-为什么要有系统调用"></a> 6.3 为什么要有系统调用？</h5><p>  </p><h5 id="64-为什么要有内核"><a class="markdownIt-Anchor" href="#64-为什么要有内核"></a> 6.4 为什么要有内核？</h5><p>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-shell是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-shell是什么&quot;&gt;&lt;/a&gt; 1. Shell是什么？&lt;/h4&gt;
&lt;h5 id=&quot;11-正规军的解释&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; h
      
    
    </summary>
    
    
      <category term="操作系统" scheme="http://holdfire.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="Linux" scheme="http://holdfire.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Python——虚拟环境</title>
    <link href="http://holdfire.github.io/2019/10/26/python-virtual-environment/"/>
    <id>http://holdfire.github.io/2019/10/26/python-virtual-environment/</id>
    <published>2019-10-26T09:00:10.000Z</published>
    <updated>2019-10-30T11:21:32.804Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-python虚拟环境简介"><a class="markdownIt-Anchor" href="#1-python虚拟环境简介"></a> 1. Python虚拟环境简介</h4><p>  Python中所有的第三方包都会被pip安装到<strong>site-packages目录</strong>下。对于某个特定的Python包，在项目A中可能需要使用1.0版的，而项目B中需要使用1.1版的。如何解决这种冲突呢？<br />  解决方案是：创建两个不同的虚拟环境，这两个虚拟环境相互独立、互不干扰。不同的项目就可以分别在各自的虚拟环境中独立运行啦，完美！<font color=AAAAAA>（引申：不同虚拟环境的包是独立的，那它们使用的Python解释器是共享的还是独立的呢？）</font><br />  那么如何创建虚拟环境呢？接下来就总结一下几种常用的虚拟环境管理工具。</p><h4 id="2-几种虚拟环境管理工具"><a class="markdownIt-Anchor" href="#2-几种虚拟环境管理工具"></a> 2. 几种虚拟环境管理工具</h4><h5 id="21-virtualenv工具"><a class="markdownIt-Anchor" href="#21-virtualenv工具"></a> 2.1 virtualenv工具</h5><p>  virtualenv工具在安装Anaconda时有自带，位于安装目录/Lib/site-packages目录下。如果没有安装，可以在终端命令行中输入<code>pip install virtualenv</code>命令安装。<br />  创建虚拟环境：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir my_project                # 创建项目文件夹</span><br><span class="line">cd my_project                   # 进入项目路径下</span><br><span class="line">virtualenv env_name             # 使用默认的python解释器创建虚拟环境</span><br><span class="line">virtualenv -p path env_name     # 使用path路径下的python解释器创建虚拟环境，Linux下path通常为/usr/bin/python,Windows中如e:/anaconda/python.exe </span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用virtualenv -h 可查看创建虚拟环境时的其他参数</span></span><br></pre></td></tr></table></figure><p>  操作虚拟环境：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Linux下操作虚拟环境</span></span><br><span class="line">source env_name/bin/activate    # 激活该虚拟环境，之后所有的操作都在该环境中</span><br><span class="line">deactivate                      # 退出该虚拟环境</span><br><span class="line">rm -rf env_name                 # 删除该虚拟环境</span><br><span class="line"><span class="meta">#</span><span class="bash"> Windows下操作虚拟环境，退出和删除操作同上</span></span><br><span class="line">cd env_name/Scripts/            # 进入到activate文件所在的目录</span><br><span class="line">activate                        # 执行activate文件，激活该虚拟环境</span><br></pre></td></tr></table></figure><h5 id="22-virtualenvwrapper工具"><a class="markdownIt-Anchor" href="#22-virtualenvwrapper工具"></a> 2.2 virtualenvwrapper工具</h5><p>  用户可以使用virtualenv工具在系统的任意地方创建虚拟环境。但下次需要激活这个环境时仍需要使用<code>source env_path/activate</code>命令，然而同学你可能早已忘记虚拟环境的路径env_path。<br />  为了让用户更方便使用，我们可以把虚拟环境集中进行管理，virtualenvwrapper工具应运而生。在使用之前，你得先安装了virtualenv，然后再安装virtualenvwrapper。安装命令：</p><pre class="highlight"><code class="shell">pip install virtualenvwrapper       # Linux下安装命令pip install virtualenvwrapper-win   # Windows下安装命令</code></pre><p>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-python虚拟环境简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-python虚拟环境简介&quot;&gt;&lt;/a&gt; 1. Python虚拟环境简介&lt;/h4&gt;
&lt;p&gt;  Python中所有的第三方包都会被pip安装到&lt;strong&gt;si
      
    
    </summary>
    
    
      <category term="编程语言" scheme="http://holdfire.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="Python" scheme="http://holdfire.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>机器学习——支持向量机SVM</title>
    <link href="http://holdfire.github.io/2019/10/25/machine-learning-SVM/"/>
    <id>http://holdfire.github.io/2019/10/25/machine-learning-SVM/</id>
    <published>2019-10-25T15:43:05.000Z</published>
    <updated>2019-11-01T18:35:04.936Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-支持向量机简介"><a class="markdownIt-Anchor" href="#1-支持向量机简介"></a> 1. 支持向量机简介</h4><p>  支持向量机(Support Vector Machine, SVM)是一种二分类模型。其分类决策函数为：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><msup><mi>w</mi><mi>T</mi></msup><mo>⋅</mo><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\tag{1} f(x)=sign(w^T \cdot x+b) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>  线性可分支持向量机学习的最优化问题为：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><munder><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></munder><mtext>   </mtext><mfrac><mn>1</mn><mn>2</mn></mfrac><msup><mrow><mo fence="true">∥</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>w</mi></mstyle></mtd></mtr></mtable><mo fence="true">∥</mo></mrow><mn>2</mn></msup></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\tag{2}\min_{w,b}\ \ \ \frac {1} {2} \begin{Vmatrix} w \end{Vmatrix}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.209656em;vertical-align:-0.8882159999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.0478920000000005em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8882159999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.86199em;"><span style="top:-2.2559899999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.86199em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.86199em;"><span style="top:-2.2559899999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.86199em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.065998em;"><span style="top:-3.31489em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:2.209656em;vertical-align:-0.8882159999999999em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mtext> </mtext><mi>t</mi><mi mathvariant="normal">.</mi><mtext>   </mtext><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi mathvariant="bold-italic">w</mi><mo>⋅</mo><msub><mi mathvariant="bold-italic">x</mi><mi>i</mi></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo>−</mo><mn>1</mn><mtext> </mtext><mo>≥</mo><mn>0</mn><mtext>     </mtext><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>N</mi></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(3)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\tag{3} s.\ t.\ \ \ y_i(\bm w\cdot \bm x_i+b)-1\ \ge 0\ \ \ \ \ i=1,2,...,N </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">s</span><span class="mord">.</span><span class="mspace"> </span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord boldsymbol" style="margin-right:0.02778em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3</span></span><span class="mord">)</span></span></span></span></span></span></p><p>对每一个不等式约束引入拉格朗日乘子<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>α</mi><mi>i</mi></msub><mo>≥</mo><mn>0</mn><mo separator="true">,</mo><mtext>  </mtext><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">\alpha _i \ge 0,\ \ i=1,2,...,N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7859700000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mspace"> </span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>后构造拉格朗日泛函<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi mathvariant="bold-italic">w</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi mathvariant="bold-italic">α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(\bm w,b,\bm \alpha )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord"><span class="mord boldsymbol" style="margin-right:0.02778em;">w</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord boldsymbol">α</span></span><span class="mclose">)</span></span></span></span>，则上述优化问题等价为：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><munder><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mi mathvariant="bold-italic">w</mi><mo separator="true">,</mo><mi>b</mi></mrow></munder><mtext> </mtext><munder><mo><mi>max</mi><mo>⁡</mo></mo><mi mathvariant="bold-italic">α</mi></munder><mtext> </mtext><mi>L</mi><mo stretchy="false">(</mo><mi mathvariant="bold-italic">w</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi mathvariant="bold-italic">α</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msup><mrow><mo fence="true">∥</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>w</mi></mstyle></mtd></mtr></mtable><mo fence="true">∥</mo></mrow><mn>2</mn></msup><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>α</mi><mi>i</mi></msub><mo stretchy="false">[</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi mathvariant="bold-italic">w</mi><mo>⋅</mo><msub><mi mathvariant="bold-italic">x</mi><mi>i</mi></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(4)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\tag{4} \min_{\bm w,b}\ \max_{\bm \alpha}\ L(\bm w,b,\bm \alpha )=\frac 1 2\begin{Vmatrix} w \end{Vmatrix}^2-\sum_{i=1} ^N \alpha _i [y_i(\bm w\cdot \bm x_i+b)-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.638216em;vertical-align:-0.8882159999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.0478920000000005em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight" style="margin-right:0.02778em;">w</span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8882159999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43056em;"><span style="top:-2.1em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight">α</span></span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord"><span class="mord boldsymbol" style="margin-right:0.02778em;">w</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord boldsymbol">α</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord">2</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.86199em;"><span style="top:-2.2559899999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.86199em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.86199em;"><span style="top:-2.2559899999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.86199em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.065998em;"><span style="top:-3.31489em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord boldsymbol" style="margin-right:0.02778em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span><span class="tag"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">4</span></span><span class="mord">)</span></span></span></span></span></span></p><p>在上式的鞍点处，目标函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi mathvariant="bold-italic">w</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi mathvariant="bold-italic">α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(\bm w,b,\bm \alpha )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord"><span class="mord boldsymbol" style="margin-right:0.02778em;">w</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord boldsymbol">α</span></span><span class="mclose">)</span></span></span></span>对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="bold-italic">w</mi></mrow><annotation encoding="application/x-tex">\bm w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44444em;vertical-align:0em;"></span><span class="mord"><span class="mord boldsymbol" style="margin-right:0.02778em;">w</span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>的偏导数为零。由此得到，在最优解处满足：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msup><mi mathvariant="bold-italic">w</mi><mo>∗</mo></msup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>α</mi><mi>i</mi></msub><msub><mi>y</mi><mi>i</mi></msub><msub><mi mathvariant="bold-italic">x</mi><mi>i</mi></msub></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(5)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\tag{5} \bm w^*= \sum_{i=1} ^N \alpha _i y_i \bm x _i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.738696em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.02778em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">5</span></span><span class="mord">)</span></span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msup><msub><mi>α</mi><mi>i</mi></msub><mo>∗</mo></msup><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mn>0</mn></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(6)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\tag{6} \sum_{i=1} ^n {\alpha _i}^* y_i = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span><span class="tag"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">6</span></span><span class="mord">)</span></span></span></span></span></span></p><p>将上面两个条件代入拉格朗日泛函中，则原问题的解等价于下面对偶问题的解：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><munder><mo><mi>max</mi><mo>⁡</mo></mo><mi mathvariant="bold-italic">α</mi></munder><mtext>  </mtext><mi>Q</mi><mo stretchy="false">(</mo><mi mathvariant="bold-italic">α</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>α</mi><mi>i</mi></msub><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>α</mi><mi>i</mi></msub><msub><mi>α</mi><mi>j</mi></msub><msub><mi>y</mi><mi>i</mi></msub><msub><mi>y</mi><mi>j</mi></msub><mo stretchy="false">(</mo><msub><mi mathvariant="bold-italic">x</mi><mi>i</mi></msub><mo>⋅</mo><msub><mi mathvariant="bold-italic">x</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(7)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\tag{7}\max_{\bm \alpha}\ \ Q(\bm \alpha)=\sum_{i=1} ^N \alpha _i -\frac 1 2 \sum_{i=1} ^N \sum_{j=1} ^N \alpha _i \alpha _j y_i y_j(\bm x_i \cdot \bm x_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.45em;vertical-align:-0.7em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43056em;"><span style="top:-2.1em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight">α</span></span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mspace"> </span><span class="mord mathdefault">Q</span><span class="mopen">(</span><span class="mord"><span class="mord boldsymbol">α</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.2421130000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord">2</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:3.2421130000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">7</span></span><span class="mord">)</span></span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mtext> </mtext><mi>t</mi><mi mathvariant="normal">.</mi><mtext>    </mtext><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>α</mi><mi>i</mi></msub><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mn>0</mn></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(8)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\tag{8} s.\ t.\ \ \ \ \sum_{i=1} ^N \alpha _i y_i=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord mathdefault">s</span><span class="mord">.</span><span class="mspace"> </span><span class="mord mathdefault">t</span><span class="mord">.</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span><span class="tag"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">8</span></span><span class="mord">)</span></span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>α</mi><mi>i</mi></msub><mo>≥</mo><mn>0</mn><mtext>  </mtext><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>N</mi></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(9)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\tag{9} \alpha _i \ge 0\ \ i=1,2,...,N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7859700000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace"> </span><span class="mspace"> </span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">9</span></span><span class="mord">)</span></span></span></span></span></span></p><p>通过对偶问题的解<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>α</mi><mi>i</mi><mo>∗</mo></msubsup><mo separator="true">,</mo><mtext> </mtext><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">\alpha _i^*,\ i=1,2,...,N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.94736em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>，代入上式（5）中可以求出原问题的解<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="bold-italic">w</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">\bm w^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.02778em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>，接下看如何求解b。<br />  根据最优化理论中的KKT条件，如果原问题的最优解为对偶问题的最优解，需要满足：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>α</mi><mi>i</mi></msub><mo stretchy="false">[</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi mathvariant="bold-italic">w</mi><mo>⋅</mo><msub><mi mathvariant="bold-italic">x</mi><mi>i</mi></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mn>0</mn></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(10)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\tag{10}\alpha _i [y_i(\bm w\cdot \bm x_i+b)-1]=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord boldsymbol" style="margin-right:0.02778em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span><span class="mord">0</span></span><span class="mord">)</span></span></span></span></span></span></p><p>支持向量对应的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>α</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\alpha _i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是大于0的，因而对于这些点有：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi mathvariant="bold-italic">w</mi><mo>⋅</mo><msub><mi mathvariant="bold-italic">x</mi><mi>i</mi></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo>−</mo><mn>1</mn><mo>=</mo><mn>0</mn></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(11)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\tag{11} y_i(\bm w\cdot \bm x_i+b)-1=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord boldsymbol" style="margin-right:0.02778em;">w</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>因为已经求出了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="bold-italic">w</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">\bm w^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.02778em;">w</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>,所以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">b^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>可以用任何支持向量根据上式求得。实际数值计算中，人们通常采用所有非求解<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>α</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\alpha _i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>非零的样本求解<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">b^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>再取平均值。</p><h4 id="2-线性支持向量机与软间隔最大化"><a class="markdownIt-Anchor" href="#2-线性支持向量机与软间隔最大化"></a> 2. 线性支持向量机与软间隔最大化</h4><p>  </p><h4 id="3-非线性支持向量机与核函数"><a class="markdownIt-Anchor" href="#3-非线性支持向量机与核函数"></a> 3. 非线性支持向量机与核函数</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-支持向量机简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-支持向量机简介&quot;&gt;&lt;/a&gt; 1. 支持向量机简介&lt;/h4&gt;
&lt;p&gt;  支持向量机(Support Vector Machine, SVM)是一种二分类模型。其分类决策
      
    
    </summary>
    
    
      <category term="人工智能" scheme="http://holdfire.github.io/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    
      <category term="机器学习" scheme="http://holdfire.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>网站出生的第一天</title>
    <link href="http://holdfire.github.io/2019/10/25/my_first_blog/"/>
    <id>http://holdfire.github.io/2019/10/25/my_first_blog/</id>
    <published>2019-10-25T10:51:19.000Z</published>
    <updated>2019-10-25T19:00:16.314Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-网站简介"><a class="markdownIt-Anchor" href="#1-网站简介"></a> 1. 网站简介</h4><p>这是holdfire于2019年10月25日创建的个人博客网站。创建步骤：<br />首先，在个人电脑上安装node.js(一种运行在服务端的 JavaScript，包含环境变量及npm的安装)；<br />然后，安装个人博客网站框架Hexo(在cmd中使用npm install -g hexo-cli等)；<br />接下来，创建一个新文件夹，执行hexo init,初始化自己的博客网站。用hexo s命令可以运行该网站。就可以在浏览器中访问啦！<br />最后，在站点配置文档_config.yml中，设置你的github仓库地址，将网站内容托管在github上，就可以通过域名访问啦！<br />补充，可以在hexo官网中下载各种自己喜欢的网站主题，然后修改主题配置文档_config.yml即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-网站简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-网站简介&quot;&gt;&lt;/a&gt; 1. 网站简介&lt;/h4&gt;
&lt;p&gt;这是holdfire于2019年10月25日创建的个人博客网站。创建步骤：&lt;br /&gt;
首先，在个人电脑上安装node
      
    
    </summary>
    
    
      <category term="软件安装" scheme="http://holdfire.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
    
      <category term="web前端" scheme="http://holdfire.github.io/tags/web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
