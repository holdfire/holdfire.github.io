<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>holdfire</title>
  
  <subtitle>学无止境，不忘初心！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://holdfire.github.io/"/>
  <updated>2019-11-06T12:30:09.363Z</updated>
  <id>http://holdfire.github.io/</id>
  
  <author>
    <name>holdfire</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>图像检索——特征编码与聚合</title>
    <link href="http://holdfire.github.io/2019/11/06/cv-imageRetrieval-2encodeFeatures/"/>
    <id>http://holdfire.github.io/2019/11/06/cv-imageRetrieval-2encodeFeatures/</id>
    <published>2019-11-06T12:23:06.000Z</published>
    <updated>2019-11-06T12:30:09.363Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h4><h4 id="2-bow词袋模型"><a class="markdownIt-Anchor" href="#2-bow词袋模型"></a> 2. BoW词袋模型</h4><h4 id="3-vlad算法"><a class="markdownIt-Anchor" href="#3-vlad算法"></a> 3. VLAD算法</h4><h4 id="4-fv算法"><a class="markdownIt-Anchor" href="#4-fv算法"></a> 4. FV算法</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-简介&quot;&gt;&lt;/a&gt; 1. 简介&lt;/h4&gt;
&lt;h4 id=&quot;2-bow词袋模型&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#2-bow词袋模型&quot;&gt;&lt;/
      
    
    </summary>
    
    
      <category term="计算机视觉" scheme="http://holdfire.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    
      <category term="图像检索" scheme="http://holdfire.github.io/tags/%E5%9B%BE%E5%83%8F%E6%A3%80%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>图像特征——CNN特征</title>
    <link href="http://holdfire.github.io/2019/11/06/cv-imageFeature-cnnFeatures/"/>
    <id>http://holdfire.github.io/2019/11/06/cv-imageFeature-cnnFeatures/</id>
    <published>2019-11-06T12:16:46.000Z</published>
    <updated>2019-11-06T12:18:44.945Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h4><p>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-简介&quot;&gt;&lt;/a&gt; 1. 简介&lt;/h4&gt;
&lt;p&gt;  &lt;/p&gt;

      
    
    </summary>
    
    
      <category term="计算机视觉" scheme="http://holdfire.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    
      <category term="图像特征" scheme="http://holdfire.github.io/tags/%E5%9B%BE%E5%83%8F%E7%89%B9%E5%BE%81/"/>
    
      <category term="图像检索" scheme="http://holdfire.github.io/tags/%E5%9B%BE%E5%83%8F%E6%A3%80%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>图像特征——全局特征描述</title>
    <link href="http://holdfire.github.io/2019/11/06/cv-imageFeature-globalFeatures/"/>
    <id>http://holdfire.github.io/2019/11/06/cv-imageFeature-globalFeatures/</id>
    <published>2019-11-06T12:05:02.000Z</published>
    <updated>2019-11-06T12:22:06.129Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h4><p>  </p><h4 id="2-颜色特征"><a class="markdownIt-Anchor" href="#2-颜色特征"></a> 2. 颜色特征</h4><p>  </p><h4 id="3-纹理特征"><a class="markdownIt-Anchor" href="#3-纹理特征"></a> 3. 纹理特征</h4><p>  如小波变换、Tamura纹理、灰度共生矩阵、纹理谱、Gabor变换</p><h4 id="4-形状特征"><a class="markdownIt-Anchor" href="#4-形状特征"></a> 4. 形状特征</h4><p>  </p><h4 id="5-感知哈希算法"><a class="markdownIt-Anchor" href="#5-感知哈希算法"></a> 5. 感知哈希算法</h4><p>  <br />基于低频的均值哈希aHash<br />感知哈希pHash<br />差异哈希算法dHash</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-简介&quot;&gt;&lt;/a&gt; 1. 简介&lt;/h4&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;h4 id=&quot;2-颜色特征&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#2-颜色特征
      
    
    </summary>
    
    
      <category term="计算机视觉" scheme="http://holdfire.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    
      <category term="图像特征" scheme="http://holdfire.github.io/tags/%E5%9B%BE%E5%83%8F%E7%89%B9%E5%BE%81/"/>
    
      <category term="图像检索" scheme="http://holdfire.github.io/tags/%E5%9B%BE%E5%83%8F%E6%A3%80%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>图像特征——局部特征点检测和描述</title>
    <link href="http://holdfire.github.io/2019/11/06/cv-imageFeature-localFeatures/"/>
    <id>http://holdfire.github.io/2019/11/06/cv-imageFeature-localFeatures/</id>
    <published>2019-11-06T11:51:49.000Z</published>
    <updated>2019-11-06T12:19:46.705Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h4><p>  </p><h4 id="2-局部特征点角点"><a class="markdownIt-Anchor" href="#2-局部特征点角点"></a> 2. 局部特征点——角点</h4><h5 id="harris角点"><a class="markdownIt-Anchor" href="#harris角点"></a> Harris角点</h5><h5 id="fast角点"><a class="markdownIt-Anchor" href="#fast角点"></a> FAST角点</h5><h4 id="3-局部特征点斑点"><a class="markdownIt-Anchor" href="#3-局部特征点斑点"></a> 3. 局部特征点——斑点</h4><h5 id="doh斑点"><a class="markdownIt-Anchor" href="#doh斑点"></a> DOH斑点</h5><h5 id="gloh斑点"><a class="markdownIt-Anchor" href="#gloh斑点"></a> GLOH斑点</h5><h5 id="log斑点"><a class="markdownIt-Anchor" href="#log斑点"></a> LOG斑点</h5><h4 id="4-局部特征描述"><a class="markdownIt-Anchor" href="#4-局部特征描述"></a> 4. 局部特征描述</h4><h5 id="hog特征"><a class="markdownIt-Anchor" href="#hog特征"></a> HOG特征</h5><h5 id="haar特征"><a class="markdownIt-Anchor" href="#haar特征"></a> Haar特征</h5><h5 id="lbp特征"><a class="markdownIt-Anchor" href="#lbp特征"></a> LBP特征</h5><h4 id="5-局部特征点检测和描述算法"><a class="markdownIt-Anchor" href="#5-局部特征点检测和描述算法"></a> 5. 局部特征点检测和描述算法</h4><h5 id="sift算法"><a class="markdownIt-Anchor" href="#sift算法"></a> SIFT算法</h5><h5 id="surf算法"><a class="markdownIt-Anchor" href="#surf算法"></a> SURF算法</h5><h5 id="orb算法"><a class="markdownIt-Anchor" href="#orb算法"></a> ORB算法</h5><h5 id="brisk算法"><a class="markdownIt-Anchor" href="#brisk算法"></a> BRISK算法</h5><h5 id="freak算法"><a class="markdownIt-Anchor" href="#freak算法"></a> FREAK算法</h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-简介&quot;&gt;&lt;/a&gt; 1. 简介&lt;/h4&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;h4 id=&quot;2-局部特征点角点&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#2-局
      
    
    </summary>
    
    
    
      <category term="图像特征" scheme="http://holdfire.github.io/tags/%E5%9B%BE%E5%83%8F%E7%89%B9%E5%BE%81/"/>
    
      <category term="图像检索" scheme="http://holdfire.github.io/tags/%E5%9B%BE%E5%83%8F%E6%A3%80%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>论文阅读笔记——图像检索</title>
    <link href="http://holdfire.github.io/2019/11/06/papers-imageRetrieval01/"/>
    <id>http://holdfire.github.io/2019/11/06/papers-imageRetrieval01/</id>
    <published>2019-11-06T11:11:07.000Z</published>
    <updated>2019-11-06T14:35:05.648Z</updated>
    
    <content type="html"><![CDATA[<h5 id="1-基于sift特征的图像检索的改进"><a class="markdownIt-Anchor" href="#1-基于sift特征的图像检索的改进"></a> 1. 基于SIFT特征的图像检索的改进</h5><p>  作者的highlights在于：（1）使用SIFT特征的关键点匹配两张图片时，将matched keypoints的数目M和距离d结合起来评估相似度得到评分<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">E_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；（2）将queried images分成多张sub-image后，也分别进行检索评估相似度得到评分<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，然后将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">E_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>加权平均得到最终的相似度评分结果。<br />  论文链接：<a href="http://xueshu.baidu.com/usercenter/paper/show?paperid=2917562fcc9a75a6c187617f0e99b371&amp;site=xueshu_se" target="_blank" rel="noopener">Li B ,  Kong X ,  Wang Z , et al. SIFT-Based Image Retrieval Combining the Distance Measure of Global Image and Sub-Image[C]// Fifth International Conference on Intelligent Information Hiding &amp; Multimedia Signal Processing. IEEE Computer Society, 2009</a><br />`</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;1-基于sift特征的图像检索的改进&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-基于sift特征的图像检索的改进&quot;&gt;&lt;/a&gt; 1. 基于SIFT特征的图像检索的改进&lt;/h5&gt;
&lt;p&gt;  作者的highlights在于：（1）使用
      
    
    </summary>
    
    
      <category term="计算机视觉" scheme="http://holdfire.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    
      <category term="图像检索" scheme="http://holdfire.github.io/tags/%E5%9B%BE%E5%83%8F%E6%A3%80%E7%B4%A2/"/>
    
      <category term="论文笔记" scheme="http://holdfire.github.io/tags/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>图像检索——综述</title>
    <link href="http://holdfire.github.io/2019/11/06/cv-imageRetrieval-0/"/>
    <id>http://holdfire.github.io/2019/11/06/cv-imageRetrieval-0/</id>
    <published>2019-11-06T08:14:50.000Z</published>
    <updated>2019-11-06T12:26:19.890Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h4><p>  图片库Lib中共有n张图片，现有待检索图片q，我们想在Lib中查找和图片q最相似的图片y。</p><h4 id="2-基于内容的图像检索cbir"><a class="markdownIt-Anchor" href="#2-基于内容的图像检索cbir"></a> 2. 基于内容的图像检索CBIR</h4><h5 id="21-基于局部特征"><a class="markdownIt-Anchor" href="#21-基于局部特征"></a> 2.1 基于局部特征</h5><p>  可选用的局部特征点包括角点和斑点两类，如：SIFT特征，SURF特征，ORB特征。流程如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">（1）对图片库Lib中图片，逐张提取局部特征点后生成描述子，将所有图片的描述子Desc保存在本地；</span><br><span class="line">（2）对待检索图片q提取局部特征并生成描述子desc_q；</span><br><span class="line">（3）将desc_q和图片库中图片的描述子进行match操作（判断是matched keypoints的规则见参考文献1），用matched kepoints的数目（设置一个阈值）及其距离来衡量其相似程度；</span><br><span class="line">（4）在图片库中所有图片进行查找（暴力查找或最近邻查找，如opencv提供的flann），根据相似度评分找到最优结果。</span><br></pre></td></tr></table></figure><h5 id="22-基于全局特征"><a class="markdownIt-Anchor" href="#22-基于全局特征"></a> 2.2 基于全局特征</h5><h5 id="23-基于cnn特征"><a class="markdownIt-Anchor" href="#23-基于cnn特征"></a> 2.3 基于CNN特征</h5><h4 id="3检索算法"><a class="markdownIt-Anchor" href="#3检索算法"></a> 3.检索算法</h4><h5 id="31-树形结构检索"><a class="markdownIt-Anchor" href="#31-树形结构检索"></a> 3.1 树形结构检索</h5><h5 id="32-基于哈希的方法"><a class="markdownIt-Anchor" href="#32-基于哈希的方法"></a> 3.2 基于哈希的方法</h5><h5 id="33-基于向量量化的方法"><a class="markdownIt-Anchor" href="#33-基于向量量化的方法"></a> 3.3 基于向量量化的方法</h5><h4 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料：</h4><ol><li>SIFT特征做图像检索论文：<a href="http://xueshu.baidu.com/usercenter/paper/show?paperid=2917562fcc9a75a6c187617f0e99b371&amp;site=xueshu_se" target="_blank" rel="noopener">SIFT-Based Image Retrieval Combining the Distance Measure of Global Image and Sub-Image</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-简介&quot;&gt;&lt;/a&gt; 1. 简介&lt;/h4&gt;
&lt;p&gt;  图片库Lib中共有n张图片，现有待检索图片q，我们想在Lib中查找和图片q最相似的图片y。&lt;/p&gt;
&lt;h4 id=&quot;2-基于内
      
    
    </summary>
    
    
      <category term="计算机视觉" scheme="http://holdfire.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    
      <category term="图像检索" scheme="http://holdfire.github.io/tags/%E5%9B%BE%E5%83%8F%E6%A3%80%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>deep-learning-introduction</title>
    <link href="http://holdfire.github.io/2019/11/06/dl-introduction/"/>
    <id>http://holdfire.github.io/2019/11/06/dl-introduction/</id>
    <published>2019-11-06T05:12:36.000Z</published>
    <updated>2019-11-06T11:58:56.172Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>目标检测——YOLO系列算法</title>
    <link href="http://holdfire.github.io/2019/11/05/cV-objectDetection-yolov3/"/>
    <id>http://holdfire.github.io/2019/11/05/cV-objectDetection-yolov3/</id>
    <published>2019-11-05T15:45:39.000Z</published>
    <updated>2019-11-06T11:57:05.166Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1简介"><a class="markdownIt-Anchor" href="#1简介"></a> 1.简介</h4><p>  </p><h4 id="5-对yolov3做出的改进"><a class="markdownIt-Anchor" href="#5-对yolov3做出的改进"></a> 5. 对YOLOv3做出的改进</h4><h5 id="51-模型压缩之yolov3-tiny"><a class="markdownIt-Anchor" href="#51-模型压缩之yolov3-tiny"></a> 5.1 模型压缩之YOLOv3-Tiny</h5><p>  </p><h5 id="52-剪枝"><a class="markdownIt-Anchor" href="#52-剪枝"></a> 5.2 剪枝</h5><p>  在oxford hand数据集上对YOLOv3做模型剪枝，<a href="https://github.com/Lam1360/YOLOv3-model-pruning" target="_blank" rel="noopener">github项目地址</a>对 YOLOv3 进行 channel pruning 之后，模型的参数量、模型大小减少 80% ，FLOPs 降低 70%，前向推断的速度可以达到原来的 200%，同时可以保持 mAP 基本不变。<br />  剪枝算法基于论文<a href="">Learning Efficient Convolutional Networks Through Network Slimming (ICCV 2017)</a> <a href="http://openaccess.thecvf.com/content_iccv_2017/html/Liu_Learning_Efficient_Convolutional_ICCV_2017_paper.html" target="_blank" rel="noopener">http://openaccess.thecvf.com/content_iccv_2017/html/Liu_Learning_Efficient_Convolutional_ICCV_2017_paper.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1简介&quot;&gt;&lt;/a&gt; 1.简介&lt;/h4&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;h4 id=&quot;5-对yolov3做出的改进&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#5
      
    
    </summary>
    
    
      <category term="计算机视觉" scheme="http://holdfire.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    
      <category term="目标检测" scheme="http://holdfire.github.io/tags/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>文字识别技术</title>
    <link href="http://holdfire.github.io/2019/11/05/cv-fields-OCR/"/>
    <id>http://holdfire.github.io/2019/11/05/cv-fields-OCR/</id>
    <published>2019-11-05T13:53:30.000Z</published>
    <updated>2019-11-06T11:53:00.565Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h4><p>  自然图像文本识别一直被认为是两个连续但独立的问题：文字检测和识别问题。当前最好的文字监测方法都是从目标检测或分割框架拓展而来。基于文字检测的结果，文字识别从被抠出的文本图片中识别一连串字符。一般来说，文字识别被转换为一个序列标记问题，通常用基于卷积神经网络(CNN)特征的递归神经网络(RNN)来解决。然而样两阶段的方法存在一些限制：（1）独立学习两个任务很难利用到文本本身的性质，比如联合的文字检测和识别可以提供丰富的上下文信息，并且两个任务可以实现互补；（2）两阶段的方法通常需要多个连续的步骤，整个系统变复杂。<br />  有些方法尝试开发一个统一的文字检测与识别框架（也叫端到端识别），如通过添加一个RNN的分支到文字检测模型来实现端到端识别。但它们本质上还是属于两阶段的框架。其缺点是：（1）使用RNN序列去识别文字，基于RNN的模型是比较难以与CNN文本监测模型进行联合优化的；（2）这些两阶段框架都需要RoI Pooling，因此很难精确地抠出准确的文本区域，通常会有很多背景被包含在抠出来的特征中，这不可避免的限制了文字识别的性能，尤其是对于多方向或弯曲文本。</p><h4 id="2-自然场景下文字检测与识别"><a class="markdownIt-Anchor" href="#2-自然场景下文字检测与识别"></a> 2. 自然场景下文字检测与识别</h4><ul><li>ICCV2019论文：<a href="">Convolutional Character Networks</a><br />  码隆科技提出的一种单阶段模型——卷积字符网络CharNet，能够端到端地同时解决文字检测和识别问题。其主要贡献为：（1）利用单个字符作为基本元素，巧妙的避免了需要同时优化CNN文本检测和RNN文本识别模型的困难与限制；（2）针对字符标注难以获取的问题，提出一个可以利用合成数据训练字符检测器的方法。该方法可以更好地将模型在合成数据上学到的知识迁移到真实数据上。</li></ul><h4 id="3-打印文档文字检测与识别"><a class="markdownIt-Anchor" href="#3-打印文档文字检测与识别"></a> 3. 打印文档文字检测与识别</h4><h4 id="4-手写体文字检测与识别"><a class="markdownIt-Anchor" href="#4-手写体文字检测与识别"></a> 4. 手写体文字检测与识别</h4><h4 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料：</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-简介&quot;&gt;&lt;/a&gt; 1. 简介&lt;/h4&gt;
&lt;p&gt;  自然图像文本识别一直被认为是两个连续但独立的问题：文字检测和识别问题。当前最好的文字监测方法都是从目标检测或分割框架拓展而来。
      
    
    </summary>
    
    
      <category term="计算机视觉" scheme="http://holdfire.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    
      <category term="计算机视觉方向" scheme="http://holdfire.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E6%96%B9%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>最近邻搜索NN——哈希散列方法</title>
    <link href="http://holdfire.github.io/2019/11/04/cv-imageRetrieval-3NN-lsh/"/>
    <id>http://holdfire.github.io/2019/11/04/cv-imageRetrieval-3NN-lsh/</id>
    <published>2019-11-04T09:36:20.000Z</published>
    <updated>2019-11-06T12:26:29.572Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="计算机视觉" scheme="http://holdfire.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    
      <category term="图像检索" scheme="http://holdfire.github.io/tags/%E5%9B%BE%E5%83%8F%E6%A3%80%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>最近邻搜索NN——向量量化</title>
    <link href="http://holdfire.github.io/2019/11/04/cv-imageRetrieval-3NN-vectorQuantization/"/>
    <id>http://holdfire.github.io/2019/11/04/cv-imageRetrieval-3NN-vectorQuantization/</id>
    <published>2019-11-04T09:20:06.000Z</published>
    <updated>2019-11-06T12:26:37.487Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h4><p>  <strong>向量量化：把原空间分解为低维子空间的Cartesian乘积后，在每个子空间通过聚类把向量聚集成若干类，每类里面的向量用对应的类中心来近似。</strong> 这样每个向量只需要用其对应的聚类中心的索引ID来表示，其余查询向量间的距离用其对应的聚类中心与查询向量间的距离来近似。向量量化的优点为：<br />（1）向量需要的存储空间变少了，只需保留对应的聚类中心的ID；<br />（2）计算时间减少了，只需要通过聚类中心的索引ID来查询预先计算好的聚类中心与查询向量的距离表格；<br />  然而，直接用k-means算法并不能带来明显的效果：如果聚类中心数目太少，向量近似效果不佳；而如果聚类中心数目太多，距离表格计算时间会太长。用Cartesian量化来解决此问题，Cartesian量化的聚类中心C是建立在几个小的聚类中心集合<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><msub><mi>C</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>C</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>C</mi><mi>P</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{C_1,C_1,...C_P\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>的基础上：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo>=</mo><msub><mi>C</mi><mn>1</mn></msub><mo>×</mo><msub><mi>C</mi><mn>2</mn></msub><mo>×</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>×</mo><msub><mi>C</mi><mi>P</mi></msub></mrow><annotation encoding="application/x-tex">C = C_1 \times C_2 \times ...\times C_P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。其好处在于通过几个小的聚类中心集合，可以得到非常多的聚类中心，甚至多于搜索的向量集合大小，从而向量近似效果可以得到保证。进一步通过引进一些限制或者策略来保证距离计算可以通过快速查找距离表格来实现，以降低计算时间。</p><h4 id="2-乘积量化pq"><a class="markdownIt-Anchor" href="#2-乘积量化pq"></a> 2. 乘积量化PQ</h4><p>  乘积量化(Productive Quantization ,PQ)把向量分成若干个子向量然后对每个子向量分别进行聚类。具体来讲，向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>分成子向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>x</mi><mi>P</mi></msub><mo stretchy="false">}</mo><mo>:</mo><mi>x</mi><mo>=</mo><mo stretchy="false">[</mo><msubsup><mi>x</mi><mn>1</mn><mi>T</mi></msubsup><mtext> </mtext><msubsup><mi>x</mi><mn>2</mn><mi>T</mi></msubsup><mtext> </mtext><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mtext> </mtext><msubsup><mi>x</mi><mi>P</mi><mi>T</mi></msubsup><msup><mo stretchy="false">]</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\{x_1,x_2,...x_P\}:x = [x_1^T\ x_2^T\ ...\ x_P^T]^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1166619999999998em;vertical-align:-0.275331em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.424669em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>。然后对每个子向量的集合<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>x</mi><mi>P</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{ x_1,x_2,...x_P\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>进行聚类，得到K（为了方便，每个集合都生成相同数量的聚类中心）个聚类中心：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mi>P</mi></msub><mo>=</mo><mo stretchy="false">{</mo><msub><mi>c</mi><mi>p</mi></msub><mn>1</mn><mo separator="true">,</mo><msub><mi>c</mi><mi>p</mi></msub><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>c</mi><mi>p</mi></msub><mi>k</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">C_P=\{ c_p1,c_p2,...c_pk\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">}</span></span></span></span>。最终，乘积量化得到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>K</mi><mi>P</mi></msup></mrow><annotation encoding="application/x-tex">K^P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span></span></span></span></span></span></span>聚类中心<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mo stretchy="false">[</mo><msubsup><mi>c</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><msub><mi>k</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><mi>T</mi></msubsup><mo separator="true">,</mo><msubsup><mi>c</mi><mrow><mo stretchy="false">(</mo><mn>2</mn><msub><mi>k</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><mi>T</mi></msubsup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msubsup><mi>c</mi><mrow><mo stretchy="false">(</mo><mi>P</mi><msub><mi>k</mi><mi>P</mi></msub><mo stretchy="false">)</mo></mrow><mi>T</mi></msubsup><msup><mo stretchy="false">]</mo><mi>T</mi></msup><mo separator="true">;</mo><msub><mi>k</mi><mn>1</mn></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>K</mi><mo stretchy="false">}</mo><mo separator="true">,</mo><msub><mi>k</mi><mn>2</mn></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>K</mi><mo stretchy="false">}</mo><mo separator="true">,</mo><msub><mi>k</mi><mi>P</mi></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>K</mi><mo stretchy="false">}</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{ [c_{(1k_1)}^T, c_{(2k_2)}^T, ..., c_{(Pk_P)}^T ]^T;k_1\in\{0,1,...,K\},k_2\in\{ 0,1,...,K\},k_P\in\{ 0,1,...,K\} \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.338331em;vertical-align:-0.49699999999999994em;"></span><span class="mopen">{</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999998em;"><span style="top:-2.378em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49699999999999994em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999998em;"><span style="top:-2.378em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49699999999999994em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999998em;"><span style="top:-2.378em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49699999999999994em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mclose">}</span><span class="mclose">}</span></span></span></span>。在最近邻搜索中，乘积量化每个向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>由其<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span>个子向量对应的聚类中心的ID来表达：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>k</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>k</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>k</mi><mi>P</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(k_1, k_2,...,k_P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。查询向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span>与参考向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>距离有对称和非对称两种近似方法。</p><ul><li>对称的方法：<br />  线下计算P个大小<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mo>×</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">K \times K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span>的距离表格，每个表格<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">D_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>存储对应的聚类中心两两之间的距离<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mi>d</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>c</mi><mi>p</mi></msub><mi>i</mi><mo separator="true">,</mo><msub><mi>c</mi><mi>p</mi></msub><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D_p(i,j) = dist(c_pi,c_pj)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>。查询向量分成<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span>个子向量，每个子向量找到对应的聚类中心，查询向量由聚类中心的ID表示：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>k</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>k</mi><mn>2</mn></msub><msup><mo stretchy="false">)</mo><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>k</mi><mi>P</mi></msub><msup><mo stretchy="false">)</mo><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">((k_1)&#x27;&#x27;,(k_2)&#x27;&#x27;,...,(k_P)&#x27;&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。这样子，距离近似为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo><mo>≈</mo><msubsup><mo>∑</mo><mrow><mi>p</mi><mo>=</mo><mn>1</mn></mrow><mi>P</mi></msubsup><msub><mi>D</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>k</mi><mi>p</mi></msub><msup><mo stretchy="false">)</mo><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo separator="true">,</mo><msub><mi>k</mi><mi>p</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">dist(p,x) \approx \sum_{p=1}^P D_p((k_p)&#x27;&#x27;, k_p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.417049em;vertical-align:-0.43581800000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</li><li>非对称的方法：<br />  线上预先计算一个大小为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>×</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">P \times K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span>的距离表格，把查询向量q分成P个子向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>q</mi><mi>P</mi></msub></mrow><annotation encoding="application/x-tex">q_1, q_2,...,q_P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，然后计算这P个子向量与P组聚类中心的距离，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mi>d</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>q</mi><mi>p</mi></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>p</mi></msub><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D(p,j)=dist(q_p, c_pj)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>。这样，距离近似为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo><mo>≈</mo><msubsup><mo>∑</mo><mrow><mi>p</mi><mo>=</mo><mn>1</mn></mrow><mi>P</mi></msubsup><mi>D</mi><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><msub><mi>k</mi><mi>p</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">dist(p,x) \approx \sum_{p=1}^P D(p, k_p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.417049em;vertical-align:-0.43581800000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。很显然，后者距离近似得更为准确，但是需要额外距离表格的计算，在搜索数据库非常大的情况下，额外距离表格计算的时间可以忽略不计。<br />  乘积量化需要把向量分成<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span>个子向量，由于各个子向量的分布不一样，每个子向量的量化性能不平衡，会导致距离近似不够理想。由Mhammad Norouzi等人提出的Cartesian k-means方法以及由Tiezheng Ge等人提出的优化的的乘积向量方法首先旋转向量，然后在旋转后的空间里进行乘积量化。这里面旋转的目的是旋转后的每个子向量的量化性能尽量平衡。旋转具有不改变欧氏距离的性质，这是可以把旋转引进来的原因。</li></ul><h4 id="3-合成量化cq"><a class="markdownIt-Anchor" href="#3-合成量化cq"></a> 3. 合成量化CQ</h4><p>  </p><h4 id="4-加和量化aq"><a class="markdownIt-Anchor" href="#4-加和量化aq"></a> 4. 加和量化AQ</h4><p>  </p><h4 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料：</h4><ol><li><a href="https://www.researchgate.net/publication/47815472_Product_Quantization_for_Nearest_Neighbor_Search" target="_blank" rel="noopener">Hervé Jégou,  Douze M ,  Schmid C . Product Quantization for Nearest Neighbor Search[J]. IEEE Transactions on Pattern Analysis and Machine Intelligence, 2010, 33(1):117-128.</a></li><li>微软研究院AI头条——最近邻搜索综述:<a href="https://blog.csdn.net/Y2c8YpZC15p/article/details/86326313" target="_blank" rel="noopener">https://blog.csdn.net/Y2c8YpZC15p/article/details/86326313</a></li><li>实例理解乘积向量算法：<a href="http://fabwrite.com/productquantization" target="_blank" rel="noopener">http://fabwrite.com/productquantization</a></li><li><a href="">理解product quantization算法</a></li><li><a href="http://mccormickml.com/2017/10/13/product-quantizer-tutorial-part-1/" target="_blank" rel="noopener">Product Quantizers for k-NN Tutorial Part 1</a></li><li><a href="http://kaiminghe.com/cvpr13/cvpr13opq_ppt.pdf" target="_blank" rel="noopener">Optimized Product Quantization</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-简介&quot;&gt;&lt;/a&gt; 1. 简介&lt;/h4&gt;
&lt;p&gt;  &lt;strong&gt;向量量化：把原空间分解为低维子空间的Cartesian乘积后，在每个子空间通过聚类把向量聚集成若干类，每类里面
      
    
    </summary>
    
    
      <category term="计算机视觉" scheme="http://holdfire.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    
      <category term="图像检索" scheme="http://holdfire.github.io/tags/%E5%9B%BE%E5%83%8F%E6%A3%80%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>最近邻搜索NN——综述</title>
    <link href="http://holdfire.github.io/2019/11/04/cv-imageRetrieval-3NN/"/>
    <id>http://holdfire.github.io/2019/11/04/cv-imageRetrieval-3NN/</id>
    <published>2019-11-04T07:39:19.000Z</published>
    <updated>2019-11-06T12:26:42.421Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h4><p>  最近邻搜索的数学描述为：在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>维欧式空间<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi mathvariant="double-struck">R</mi><mi>D</mi></msup></mrow><annotation encoding="application/x-tex">\mathbb{R}^D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span></span></span></span></span></span></span>中，给定查询向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mi>D</mi></msup></mrow><annotation encoding="application/x-tex">q \in \mathbb{R}^D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span></span></span></span></span></span></span>，我们想要从有n个向量的有限集合<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">X</mi><mo>⊂</mo><msup><mi mathvariant="double-struck">R</mi><mi>D</mi></msup></mrow><annotation encoding="application/x-tex">\mathcal{X} \subset \mathbb{R}^D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span></span></span></span></span></span></span>中,找到和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span>距离最小的元素<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi>N</mi><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">NN(q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span>。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi>N</mi><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><mi>r</mi><mi>g</mi><mtext> </mtext><munder><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mi>x</mi><mo>∈</mo><mi mathvariant="script">X</mi></mrow></munder><mtext> </mtext><mi>d</mi><mi>i</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">NN(q) = arg \ \min_{x \in\mathcal{X}}\ dist(q,x) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.521701em;vertical-align:-0.771701em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.055669em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.14643em;">X</span></span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.771701em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></span></p><p>通过线性查找，计算查询向量和数据库中各个向量的距离。但如果是海量的高维数据集，采用线性查找会非常耗时。<br />  为了解决这个问题，我们需要采用一些类似索引的技术来加速查找的过程，这类方法包括：最近邻检索(Nearest Neighbor Search, NN)和近似最近邻检索(Approximate Nearest Neighbor Search, ANN)。主要有以下两种思路：一种是基于提升检索结构性能的方法，大多基于树形结构。另一种是基于对数据本身的处理，包括哈希算法，向量量化等方法。<br />  近似最近邻搜索方法ANN通过对数据分析聚类的方法，对数据库中的数据进行分类或编码。对于目标数据，根据其数据特诊预测其所属的数据类别，返回类别中的部分或全部作为检索结果。主要有两类方案，第一类是缩短距离计算时间，例如将维度d由1000将到100，这类方法主要包括哈希散列和矢量量化。第二类方法是通过减少距离的计算次数来实现的。例如将计算次数由1,000,000次减少到1,000次。本文暂不关注。</p><h4 id="11-基于提升检索结构性能的方法"><a class="markdownIt-Anchor" href="#11-基于提升检索结构性能的方法"></a> 1.1 基于提升检索结构性能的方法</h4><ul><li>随机k-d树算法：对数据的处理，减少距离计算的次数</li><li>优先搜索k-means树算法</li><li>层次聚类树算法</li></ul><h4 id="12-对数据的处理缩短距离计算的时间哈希散列"><a class="markdownIt-Anchor" href="#12-对数据的处理缩短距离计算的时间哈希散列"></a> 1.2 对数据的处理，缩短距离计算的时间——&gt;哈希散列</h4><p>  哈希散列是通过哈希函数把向量q变化为二值码，然后用Hamming距离来近似表示原来两个向量的距离。<br />  核心思想是：在高维空间相邻的数据，经过哈希函数的映射投影转化到低维空间后，它们落入同一个吊桶的概率很大，而不相邻的数据映射到同一个吊桶的概率很小。在检索时将欧式空间的距离计算转化到汉明（Hamming）空间，并将全局检索转化为对映射到同一个吊桶中的数据进行检索，从而提高了检索速度。这种方法的主要难点在于如何寻找适合的哈希函数。</p><h4 id="13-对数据的处理缩短距离计算的时间向量量化"><a class="markdownIt-Anchor" href="#13-对数据的处理缩短距离计算的时间向量量化"></a> 1.3 对数据的处理，缩短距离计算的时间——&gt;向量量化</h4><p>  向量量化是通过聚类把向量集聚成若干类，每类里面的向量用对应的类中心来近似。这样子，每个向量只需要用其对应的聚类中心的索引ID来表示，其与查询向量间的距离用其对应的聚类中心与查询向量间的距离来近似。向量量化带来了两项优势：向量需要的存储空间变少了，只需保存对应的聚类中心的ID；计算时间减少了，只需要通过聚类中心的索引ID来查询预先计算好的聚类中心与查询向量的距离表格。<br />  </p><h4 id="2-基于提升检索结构性能的方法"><a class="markdownIt-Anchor" href="#2-基于提升检索结构性能的方法"></a> 2. 基于提升检索结构性能的方法</h4><p>  1977年，Friedman et al.提出了k-d树，这种结构后来被用于加速精确查找。</p><ul><li><p>random multiple k-d trees和priority search<br />  相比较普通k-d树，提升了搜索的准确率和搜索效率。相关文章：<a href="">Silpa-Anan &amp; Hartley. Optimised kd-trees for fast image descriptor matching. In CVPR, 2008.</a></p></li><li><p>FLANN方法<br />   该方法在random k-d trees和hierarchial k-means trees之间进行很好地配置 。相关文章：<a href="">Muja &amp; Lowe. Fast approximate nearest neighbors with automatic algorithm configuration. In VISS-APP(1),.pp.331-340,2009.</a></p></li><li><p>over tree结构<br />  相关文章：<a href="">Beygelzimer et al., Cover trees for nearest neighbor. In ICML, pp.97-104,2006.</a></p></li><li><p>trinary tree结构<br />  相关文章:<a href="">Jia et al., 2010. Optimised kd-trees for scable visual descriptor indexing. In CVPR,PP 3392-3399.</a><br /><a href="">Wang et al.,2014. Trinary-projection trees for approximate nearest neighbor search. IEEE Trans.Pattern Ananl.Mach.Intell.</a></p></li><li><p>基于近邻图的最近邻搜索算法<br />  相关文献：<a href="">Arya &amp; Mount, 1993. Approximate nearest neighbor queries in fixed dimension. In SODA.</a><br /><a href="">Wang &amp; Li, 2012. Query-driven iterated neighborhood graph search for large scale indexing.</a><br /><a href="">Wang et al., 2013. Fast neighborhood graph search using cartesian concatenation. In ICCV. </a></p></li></ul><h4 id="3-基于哈希散列的方法"><a class="markdownIt-Anchor" href="#3-基于哈希散列的方法"></a> 3. 基于哈希散列的方法</h4><p>  这类方法将数据库中的向量转换为更短的编码，从而占用的存储空间更小，距离计算的时间也更短。<br /><code>局部敏感哈希方法的发展</code></p><ul><li><p>1999年，Gionis提出局部敏感哈希方法LSH<br />  相关文章：<a href="">Gionis. 1999. Similarity search in high dimensions via hashing.</a></p></li><li><p>LSH的基础上Mahalanobis distance，<br />  相关文章：<a href="">Jain et al. 2008. Fast image search for learned metrics. In CVPR.</a></p></li><li><p>LSH基础上kernalization，<br />  相关文章：<a href="">Kulis &amp; Grauman. 2009. Kernalized locality-sensitive hashing for scalable image search. In NIPS.</a></p></li><li><p>comlementary hashing，<br />  相关文章：<a href="">Xu et al. 2011. Comlementary hashing for approximate nearest neighbor search. In ICCV</a></p></li></ul><p><code>设计哈希函数</code></p><ul><li><p>语义哈希(semantic hashing)<br />  相关文章：<a href="">Salakhutdinov &amp; Hinton. 2009. Semantic hashing. Int.J.Approx.Reasoning.</a></p></li><li><p>shift kernel hashing，<br />  相关文章：<a href="">Raginsky &amp; Lazebnik. 2009. Local sensitive binary codes from shift-invariant kernels. In NIPS.</a></p></li><li><p>isotropic hashing，<br />  相关文章：[<a href="">Kong &amp; Li. 2012.Isotropic hashing. In NIPS.</a></p></li></ul><p><code>设计保相似度的哈希函数</code></p><ul><li><p>谱哈希(Spectral hashing)<br />  这种方法的出发点是希望Hamming距离大的两个数据点在原空间的相似度要小，其目标函数为最小化Hamming距离和原空间相似度的乘积，最后转化为解特征值或特征函数问题。相关文章：<a href="">Weiss et al. 2008. Spectral hashing. In NIPS.</a></p></li><li><p>二值化重建嵌入(binary reconstructive embedding)<br />  其目标函数是最小化距离重建误差，即希望Hamming距离和原空间里的欧氏距离尽量接近。相关文章：<a href="">Kulis &amp; Darrells. 2009. Learning to hash with binary reconstructive embeddings. In NIPS.</a></p></li><li><p>基于图的哈希(graph-based hashing)<br />  锚点图哈希(Anchor Graph Hashing, AGH)。相关文章：<a href="">Liu Wei et al. 2012.Hashing with graphs. In ICML.</a></p></li><li><p>半监督哈希(Semi-Supervised Hashing)<br />  相关文章：<a href="">Wang Jun et al., 2012. Semi-supervised hashing for large scale search.</a></p></li></ul><p><code>设计保序的目标函数</code></p><ul><li><p>三元组损失函数是一种最简单的保序函数<br />  设计保序的目标函数，使二值空间的序跟原空间的序尽量一致。将搜索问题看成排序问题，找到距离查询点近的向量。如果一个点q与一个点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">p_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的距离比q到点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">q_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的距离小，那么在二值空间里，点q与点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">p_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的Hamming距离比q到点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">q_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的Hamming距离小也要。相关文章：<a href="">Mohanmmad Norouzi, Fleet. 2011. Minimal loss hashing for compact binary codes.In ICML.</a></p></li><li><p>更高阶的保序目标函数<br />  相关文章：<a href="">Wang et al.,2013. Order preserving hashing for approximate nearest neighbor search.In ACM Multimedia.</a></p></li></ul><p><code>迭代量化ITQ</code></p><ul><li>迭代量化(Iterative Quntization, ITQ)的方法<br />  其出发点不同于保相似度、保距离或者保序，而是把二值编码当成原向量的近似，利用欧氏距离旋转不变性的性质，建立了最小化二值编码重建旋转原向量误差的目标函数，寻找最优的旋转变换和二值编码。尽管直观看上去重建向量的方法比保相似、保距离或者保序的方法简单，近似得更强，但ITQ实际上效果还是很不错的,原因是保相似、保距离或者保序需要建立二元或多元关系，计算复杂度很大，因而需要各种近似，使得最后的效果不如预期。相关文章：<a href="">Gong &amp; Lazebnik. Iterative quantization: A procrustean approach to learning bianry codes. In CVPR,PP.817-824,2011.</a></li></ul><h4 id="4-向量量化的方法"><a class="markdownIt-Anchor" href="#4-向量量化的方法"></a> 4. 向量量化的方法</h4><ul><li><p>乘积量化(Productive Quantization, PQ)<br />  乘积量化是信号处理上用到的一种数据压缩技术。相关文章：<a href="https://www.researchgate.net/publication/47815472_Product_Quantization_for_Nearest_Neighbor_Search" target="_blank" rel="noopener">Hervé Jégou,  Douze M ,  Schmid C . Product Quantization for Nearest Neighbor Search[J]. IEEE Transactions on Pattern Analysis and Machine Intelligence, 2010, 33(1):117-128.</a></p></li><li><p>合成量化(Compositive Quantization,CQ)的方法<br />  相关文章：<a href="">Zhang Ting, Du Chao, Wang Jingdong.Composite quantization for approximative nearest neighbor search.ICML 2014: 838-846.</a> 以及：<a href="">Wang Jingdong, Zhang Ting. Composition Quantization. IEEE Transactions on Pattern Analysis and Machine Intelligence.2018</a></p></li><li><p>加和量化(Additive Quantization, AQ)<br />  </p></li><li></li></ul><p>  </p><h4 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料：</h4><ol><li>微软研究院AI头条——最近邻搜索综述:<a href="https://blog.csdn.net/Y2c8YpZC15p/article/details/86326313" target="_blank" rel="noopener">https://blog.csdn.net/Y2c8YpZC15p/article/details/86326313</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-简介&quot;&gt;&lt;/a&gt; 1. 简介&lt;/h4&gt;
&lt;p&gt;  最近邻搜索的数学描述为：在&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;ma
      
    
    </summary>
    
    
      <category term="计算机视觉" scheme="http://holdfire.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    
      <category term="图像检索" scheme="http://holdfire.github.io/tags/%E5%9B%BE%E5%83%8F%E6%A3%80%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>学习方法——如何阅读论文</title>
    <link href="http://holdfire.github.io/2019/11/04/lx-howToReadPapers/"/>
    <id>http://holdfire.github.io/2019/11/04/lx-howToReadPapers/</id>
    <published>2019-11-03T19:17:54.000Z</published>
    <updated>2019-11-06T14:37:18.656Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1论文的阅读顺序"><a class="markdownIt-Anchor" href="#1论文的阅读顺序"></a> 1.论文的阅读顺序</h4><h5 id="第一阶段判断论文是否值得读"><a class="markdownIt-Anchor" href="#第一阶段判断论文是否值得读"></a> 第一阶段：判断论文是否值得读</h5><p>阅读顺序为：读标题和关键词–&gt;读摘要–&gt;读结论<br />掌握论文的大概内容。</p><h5 id="第二阶段读论文"><a class="markdownIt-Anchor" href="#第二阶段读论文"></a> 第二阶段：读论文</h5><p>阅读顺序为：读图表和数据–&gt;读引言introduction<br />如果想要深挖细节：读结果和讨论–&gt;读实验部分</p><h5 id="第三阶段做笔记"><a class="markdownIt-Anchor" href="#第三阶段做笔记"></a> 第三阶段：做笔记</h5><p>好笔记的标准：下次看笔记内容即可，无需再看这篇论文</p><h4 id="2阅读时应该做的思考和笔记"><a class="markdownIt-Anchor" href="#2阅读时应该做的思考和笔记"></a> 2.阅读时应该做的思考和笔记</h4><p><code>一篇论文的核心往往就一两句话，而论文的其他部分都是在用不同的方式支持它的核心。</code></p><h5 id="摘要abstract"><a class="markdownIt-Anchor" href="#摘要abstract"></a> 摘要Abstract</h5><p>  摘要是对全篇内容的概括，阅读后需要做的笔记：</p><ul><li>作者想要解决什么问题？question</li><li>作者通过什么方法/模型解决了这个问题？method</li><li>作者给出的答案是什么？result</li></ul><h5 id="引言introduction"><a class="markdownIt-Anchor" href="#引言introduction"></a> 引言introduction</h5><p>  引言介绍了文章的研究背景和研究意义，一般在最后会给出文章的结构。需要做的笔记：</p><ul><li>作者为什么要研究这个问题？</li><li>这个问题现在的研究进展到了哪个地步？</li><li>作者使用的理论是基于哪些假设？</li></ul><h5 id="结论conclusion"><a class="markdownIt-Anchor" href="#结论conclusion"></a> 结论conclusion</h5><p>  结论部分会把整篇文章的主要内容复述一遍，帮助读者回顾+理清思路，然后在此基础上加深自己的研究。需要做的笔记：</p><ul><li>这篇文章存在哪些缺陷？</li><li>作者关于这个课题的构思有哪几点？</li></ul><h4 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料：</h4><ol><li>明尼苏达大学Peter W. Carr教授传授的阅读顺序：<a href="https://video.zhihu.com/video/1172537839240863744" target="_blank" rel="noopener">https://video.zhihu.com/video/1172537839240863744</a></li><li>知乎大佬的回答：<a href="https://www.zhihu.com/question/345516318/answer/863530375" target="_blank" rel="noopener">https://www.zhihu.com/question/345516318/answer/863530375</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1论文的阅读顺序&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1论文的阅读顺序&quot;&gt;&lt;/a&gt; 1.论文的阅读顺序&lt;/h4&gt;
&lt;h5 id=&quot;第一阶段判断论文是否值得读&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href
      
    
    </summary>
    
    
      <category term="个人杂记" scheme="http://holdfire.github.io/categories/%E4%B8%AA%E4%BA%BA%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="学习方法" scheme="http://holdfire.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/"/>
    
      <category term="论文笔记" scheme="http://holdfire.github.io/tags/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>机器学习——正则化</title>
    <link href="http://holdfire.github.io/2019/11/04/ml-regularization/"/>
    <id>http://holdfire.github.io/2019/11/04/ml-regularization/</id>
    <published>2019-11-03T18:41:48.000Z</published>
    <updated>2019-11-06T12:00:43.453Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="机器学习" scheme="http://holdfire.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="深度学习" scheme="http://holdfire.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="机器学习" scheme="http://holdfire.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>机器学习——标准化和归一化</title>
    <link href="http://holdfire.github.io/2019/11/04/ml-standardizationNormalization/"/>
    <id>http://holdfire.github.io/2019/11/04/ml-standardizationNormalization/</id>
    <published>2019-11-03T18:28:16.000Z</published>
    <updated>2019-11-06T12:00:55.837Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="机器学习" scheme="http://holdfire.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="深度学习" scheme="http://holdfire.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="机器学习" scheme="http://holdfire.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>集成学习——GBDT</title>
    <link href="http://holdfire.github.io/2019/11/04/ml-GBDT/"/>
    <id>http://holdfire.github.io/2019/11/04/ml-GBDT/</id>
    <published>2019-11-03T18:05:04.000Z</published>
    <updated>2019-11-06T12:00:35.263Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="机器学习" scheme="http://holdfire.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://holdfire.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="集成学习" scheme="http://holdfire.github.io/tags/%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>集成学习——XgBoost</title>
    <link href="http://holdfire.github.io/2019/11/04/ml-XgBoost/"/>
    <id>http://holdfire.github.io/2019/11/04/ml-XgBoost/</id>
    <published>2019-11-03T18:05:04.000Z</published>
    <updated>2019-11-06T12:01:04.599Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="机器学习" scheme="http://holdfire.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://holdfire.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="集成学习" scheme="http://holdfire.github.io/tags/%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>集成学习——AdaBoost</title>
    <link href="http://holdfire.github.io/2019/11/04/ml-adaBoost/"/>
    <id>http://holdfire.github.io/2019/11/04/ml-adaBoost/</id>
    <published>2019-11-03T18:05:04.000Z</published>
    <updated>2019-11-06T12:00:14.436Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="机器学习" scheme="http://holdfire.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://holdfire.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="集成学习" scheme="http://holdfire.github.io/tags/%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>集成学习——简介</title>
    <link href="http://holdfire.github.io/2019/11/04/ml-ensembleLearning/"/>
    <id>http://holdfire.github.io/2019/11/04/ml-ensembleLearning/</id>
    <published>2019-11-03T18:05:04.000Z</published>
    <updated>2019-11-06T12:00:24.989Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="机器学习" scheme="http://holdfire.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://holdfire.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="集成学习" scheme="http://holdfire.github.io/tags/%E9%9B%86%E6%88%90%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>计算机视觉方向——介绍</title>
    <link href="http://holdfire.github.io/2019/11/03/cv-fields/"/>
    <id>http://holdfire.github.io/2019/11/03/cv-fields/</id>
    <published>2019-11-03T13:40:07.000Z</published>
    <updated>2019-11-06T11:54:01.606Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h4><p>  计算机视觉包含图像处理、图像分析和图像理解三个部分。</p><h4 id="2-计算机视觉基础任务"><a class="markdownIt-Anchor" href="#2-计算机视觉基础任务"></a> 2. 计算机视觉基础任务</h4><h5 id="21-图像处理image-process"><a class="markdownIt-Anchor" href="#21-图像处理image-process"></a> 2.1 图像处理image process</h5><p>  图像处理是对图像进行去噪、增强、复原、分割、特征提取、识别、等操作的理论、方法和技术。</p><h5 id="22-图像分析image-analysis"><a class="markdownIt-Anchor" href="#22-图像分析image-analysis"></a> 2.2 图像分析image analysis</h5><p>  </p><h5 id="23-图像理解image-understanding"><a class="markdownIt-Anchor" href="#23-图像理解image-understanding"></a> 2.3 图像理解image understanding</h5><p>  图像理解可以认为是一种动态的目标检测，由全局信息生成图像摘要。</p><ul><li>特征检测和匹配(feature detection and matching)</li><li>基于特征的图像对齐(feature based alignment):姿态估计(pose estimation)</li><li>图像分割(segmentation)：图像语义分割(image semantic segmentation)</li><li>图像分类(image classification)</li><li>目标检测(object detection)</li><li>图像描述(image caption)</li><li>图像生成(image generation):如变分自编码器VAE，生成对抗网络GAN</li><li>度量学习(metric learning)</li></ul><h4 id="3-计算机视觉方向"><a class="markdownIt-Anchor" href="#3-计算机视觉方向"></a> 3. 计算机视觉方向</h4><h5 id="31-图像相关"><a class="markdownIt-Anchor" href="#31-图像相关"></a> 3.1 图像相关</h5><ul><li><font color="red">图像检索</font>：基于内容的图像检索CBIR，实例图像检索(instance image retrieval)</li><li><font color="red">人脸识别</font>：人脸检测，人脸识别，人脸活体检测算法，人脸表情识别，人脸颜值打分</li><li><font color="red">行人属性识别</font>：Re ID</li><li><font color="red">人体骨骼关键点检测</font>：人体姿态估计(Pose Estimation)，行为识别(open pose开源框架)</li></ul><h5 id="32-视频或多幅图像"><a class="markdownIt-Anchor" href="#32-视频或多幅图像"></a> 3.2 视频或多幅图像</h5><ul><li><font color="red">视频目标跟踪</font>：单目标跟踪，多目标跟踪，行人再追踪</li><li><font color="red">视频显著物体检测</font>：Video Salient Object Detection</li><li><font color="red">视频对象提取</font>：</li><li><font color="red">视频分类</font>：video classification</li></ul><h5 id="33-文字-语言相关"><a class="markdownIt-Anchor" href="#33-文字-语言相关"></a> 3.3 文字、语言相关</h5><ul><li><font color="red">文字检测与识别</font>：文档文字检测与识别，场景文字检测与识别，手写体文本检测与识别</li><li><font color="red">基于深度学习的表格提取</font>：</li><li><font color="red">唇语识别</font>：</li></ul><h5 id="34-专门领域"><a class="markdownIt-Anchor" href="#34-专门领域"></a> 3.4 专门领域</h5><ul><li><font color="red">自动驾驶</font>：slam技术</li><li><font color="red">车辆结构化</font>：车牌识别，车型识别</li><li><font color="red">医学图像分析</font>:</li></ul><h5 id="35-三维视觉技术"><a class="markdownIt-Anchor" href="#35-三维视觉技术"></a> 3.5 三维视觉技术</h5><ul><li><font color="red">三维重建</font>：单视图三维重建，多视图三维重建，从全景图恢复三维结构，深度相机室内实时稠密三维重建，</li><li><font color="red">立体匹配技术</font>：阵列相机立体全景拼接</li><li><font color="red">运动重构SFM</font>：Strucutre From Motion，从一系列包含视觉运动信息的多幅二维图像序列中估计三维结构</li><li><font color="red">基于RGB-D的三维深度学习</font>：三维目标分类，三维目标检测，三维语义分割</li><li><font color="red">构造深度图</font>：单目微运动生成深度图，深度图补全</li><li><font color="red">深度学习自动构图</font>：</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-简介&quot;&gt;&lt;/a&gt; 1. 简介&lt;/h4&gt;
&lt;p&gt;  计算机视觉包含图像处理、图像分析和图像理解三个部分。&lt;/p&gt;
&lt;h4 id=&quot;2-计算机视觉基础任务&quot;&gt;&lt;a class=&quot;m
      
    
    </summary>
    
    
      <category term="计算机视觉" scheme="http://holdfire.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    
      <category term="计算机视觉方向" scheme="http://holdfire.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89%E6%96%B9%E5%90%91/"/>
    
  </entry>
  
</feed>
